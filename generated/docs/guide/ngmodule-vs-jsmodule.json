{
  "id": "guide/ngmodule-vs-jsmodule",
  "title": "JavaScript 模块 vs. NgModule",
  "contents": "\n<div class=\"content\">\n<h1 translation-origin=\"off\" id=\"javascript-modules-vs-ngmodules\">JavaScript Modules vs. NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodule-vs-jsmodule#javascript-modules-vs-ngmodules\"><i class=\"material-icons\">link</i></a></h1>\n<h1 translation-result=\"\" id=\"javascript-modules-vs-ngmodules\">JavaScript 模块 vs. NgModule<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodule-vs-jsmodule#javascript-modules-vs-ngmodules\"><i class=\"material-icons\">link</i></a></h1>\n<h4 translation-origin=\"off\" id=\"prerequisites\">Prerequisites<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodule-vs-jsmodule#prerequisites\"><i class=\"material-icons\">link</i></a></h4>\n<h4 translation-result=\"\" id=\"prerequisites-8\">前提条件<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodule-vs-jsmodule#prerequisites-8\"><i class=\"material-icons\">link</i></a></h4>\n<p translation-origin=\"off\">A basic understanding of <a href=\"https://hacks.mozilla.org/2015/08/es6-in-depth-modules/\">JavaScript/ECMAScript modules</a>.</p>\n<p translation-result=\"\">对 <a href=\"https://hacks.mozilla.org/2015/08/es6-in-depth-modules/\">JavaScript/ECMAScript 模块</a> 有基本的了解。</p>\n<hr>\n<p translation-origin=\"off\">JavaScript and Angular use modules to organize code, and\nthough they organize it differently, Angular apps rely on both.</p>\n<p translation-result=\"\">JavaScript 和 Angular 都使用模块来组织代码，虽然它们的组织形式不同，但 Angular 的应用会同时依赖两者。</p>\n<h2 translation-origin=\"off\" id=\"javascript-modules\">JavaScript modules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodule-vs-jsmodule#javascript-modules\"><i class=\"material-icons\">link</i></a></h2>\n<h2 translation-result=\"\" id=\"javascript-modules\">JavaScript 模块<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodule-vs-jsmodule#javascript-modules\"><i class=\"material-icons\">link</i></a></h2>\n<p translation-origin=\"off\">In JavaScript, modules are individual files with JavaScript code in them. To make what’s in them available, you write an export statement, usually after the relevant code, like this:</p>\n<p translation-result=\"\">在 JavaScript 中，模块是内含 JavaScript 代码的独立文件。要让其中的东西可用，你要写一个导出语句，通常会放在相应的代码之后，类似这样：</p>\n<code-example language=\"typescript\">\nexport class AppComponent { ... }\n</code-example>\n<p translation-origin=\"off\">Then, when you need that file’s code in another file, you import it like this:</p>\n<p translation-result=\"\">然后，当你在其它文件中需要这个文件的代码时，要像这样导入它：</p>\n<code-example language=\"typescript\">\nimport { AppComponent } from './app.component';\n</code-example>\n<p translation-origin=\"off\">JavaScript modules help you namespace, preventing accidental global variables.</p>\n<p translation-result=\"\">JavaScript 模块让你能为代码加上命名空间，防止因为全局变量而引起意外。</p>\n<h2 translation-origin=\"off\" id=\"ngmodules\">NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodule-vs-jsmodule#ngmodules\"><i class=\"material-icons\">link</i></a></h2>\n<!-- KW-- perMisko: let's discuss. This does not answer the question why it is different. Also, last sentence is confusing.-->\n<p translation-origin=\"off\">NgModules are classes decorated with <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code>. The <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> decorator’s <code>imports</code> array tells Angular what other NgModules the current module needs. The modules in the <code>imports</code> array are different than JavaScript modules because they are NgModules rather than regular JavaScript modules. Classes with an <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> decorator are by convention kept in their own files, but what makes them an <code><a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> isn’t being in their own file, like JavaScript modules; it’s the presence of <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> and its metadata.</p>\n<p translation-result=\"\">NgModule 是一些带有 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 装饰器的类。<code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 装饰器的 <code>imports</code> 数组会告诉 Angular 哪些其它的 NgModule 是当前模块所需的。\n<code>imports</code> 数组中的这些模块与 JavaScript 模块不同，它们都是 NgModule 而不是常规的 JavaScript 模块。\n带有 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 装饰器的类通常会习惯性地放在单独的文件中，但单独的文件并不像 JavaScript 模块那样作为必要条件，而是因为它带有 <code>@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a></code> 装饰器及其元数据。</p>\n<p translation-origin=\"off\">The <code>AppModule</code> generated from the Angular CLI demonstrates both kinds of modules in action:</p>\n<p translation-result=\"\">Angular CLI 生成的 <code>AppModule</code> 实际演示了这两种模块：</p>\n<code-example language=\"typescript\">\n/* These are JavaScript import statements. Angular doesn’t know anything about these. */\nimport { <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a> } from '@angular/platform-browser';\nimport { <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n/* The @<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> decorator lets Angular know that this is an NgModule. */\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>({\n  declarations: [\n    AppComponent\n  ],\n  imports: [     /* These are <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a> imports. */\n    <a href=\"api/platform-browser/BrowserModule\" class=\"code-anchor\">BrowserModule</a>\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n</code-example>\n<p translation-origin=\"off\">The NgModule classes differ from JavaScript module in the following key ways:</p>\n<p translation-result=\"\">NgModule 类与 JavaScript 模块有下列关键性的不同：</p>\n<ul>\n<li>\n<p translation-origin=\"off\">An NgModule bounds <a href=\"guide/ngmodule-faq#q-declarable\">declarable classes</a> only.\nDeclarables are the only classes that matter to the <a href=\"guide/ngmodule-faq#q-angular-compiler\">Angular compiler</a>.</p>\n<p translation-result=\"\">   Angular 模块只绑定了<a href=\"guide/ngmodule-faq#q-declarable\"><em>可声明的类</em></a>，这些可声明的类只是供<a href=\"guide/ngmodule-faq#q-angular-compiler\">Angular 编译器</a>用的。</p>\n</li>\n<li>\n<p translation-origin=\"off\">Instead of defining all member classes in one giant file as in a JavaScript module,\nyou list the module's classes in the <code>@<a href=\"api/core/NgModule#declarations\" class=\"code-anchor\">NgModule.declarations</a></code> list.</p>\n<p translation-result=\"\">   与 JavaScript 类把它所有的成员类都放在一个巨型文件中不同，你要把该模块的类列在它的 <code>@<a href=\"api/core/NgModule#declarations\" class=\"code-anchor\">NgModule.declarations</a></code> 列表中。</p>\n</li>\n<li>\n<p translation-origin=\"off\">An NgModule can only export the <a href=\"guide/ngmodule-faq#q-declarable\">declarable classes</a>\nit owns or imports from other modules. It doesn't declare or export any other kind of class.</p>\n<p translation-result=\"\">   Angular 模块只能导出<a href=\"guide/ngmodule-faq#q-declarable\"><em>可声明的类</em></a>。这可能是它自己拥有的也可能是从其它模块中导入的。它不会声明或导出任何其它类型的类。</p>\n</li>\n<li>\n<p translation-origin=\"off\">Unlike JavaScript modules, an NgModule can extend the <em>entire</em> application with services\nby adding providers to the <code>@<a href=\"api/core/NgModule#providers\" class=\"code-anchor\">NgModule.providers</a></code> list.</p>\n<p translation-result=\"\">   与 JavaScript 模块不同，NgModule 可以通过把服务提供商加到 <code>@<a href=\"api/core/NgModule#providers\" class=\"code-anchor\">NgModule.providers</a></code> 列表中，来用服务扩展<em>整个</em>应用。</p>\n</li>\n</ul>\n<hr>\n<h2 translation-origin=\"off\" id=\"more-on-ngmodules\">More on NgModules<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodule-vs-jsmodule#more-on-ngmodules\"><i class=\"material-icons\">link</i></a></h2>\n<h2 translation-result=\"\" id=\"more-on-ngmodules-4\">关于 NgModule 的更多知识<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"guide/ngmodule-vs-jsmodule#more-on-ngmodules-4\"><i class=\"material-icons\">link</i></a></h2>\n<p translation-origin=\"off\">For more information on NgModules, see:</p>\n<p translation-result=\"\">要了解关于 NgModule 的更多知识，参见</p>\n<ul>\n<li>\n<p translation-origin=\"off\"><a href=\"guide/bootstrapping\">Bootstrapping</a>.</p>\n<p translation-result=\"\"> <a href=\"guide/bootstrapping\">引导启动</a>。</p>\n</li>\n<li>\n<p translation-origin=\"off\"><a href=\"guide/frequent-ngmodules\">Frequently used modules</a>.</p>\n<p translation-result=\"\"> <a href=\"guide/frequent-ngmodules\">常用模块</a>。</p>\n</li>\n<li>\n<p translation-origin=\"off\"><a href=\"guide/providers\">Providers</a>.</p>\n<p translation-result=\"\"> <a href=\"guide/providers\">服务提供商</a>。</p>\n</li>\n</ul>\n\n</div>\n<!-- links to this doc:\n - guide/bootstrapping\n - guide/feature-modules\n - guide/frequent-ngmodules\n - guide/lazy-loading-ngmodules\n - guide/module-types\n - guide/ngmodule-api\n - guide/ngmodule-faq\n - guide/ngmodules\n - guide/sharing-ngmodules\n-->\n<!-- links from this doc:\n - api/core/NgModule\n - api/core/NgModule#declarations\n - api/core/NgModule#providers\n - api/platform-browser/BrowserModule\n - guide/bootstrapping\n - guide/frequent-ngmodules\n - guide/ngmodule-faq#q-angular-compiler\n - guide/ngmodule-faq#q-declarable\n - guide/ngmodule-vs-jsmodule#javascript-modules\n - guide/ngmodule-vs-jsmodule#javascript-modules-vs-ngmodules\n - guide/ngmodule-vs-jsmodule#more-on-ngmodules\n - guide/ngmodule-vs-jsmodule#more-on-ngmodules-4\n - guide/ngmodule-vs-jsmodule#ngmodules\n - guide/ngmodule-vs-jsmodule#prerequisites\n - guide/ngmodule-vs-jsmodule#prerequisites-8\n - guide/providers\n - https://hacks.mozilla.org/2015/08/es6-in-depth-modules/\n-->"
}