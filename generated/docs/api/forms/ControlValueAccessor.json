{
  "id": "api/forms/ControlValueAccessor",
  "title": "ControlValueAccessor",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/angular/angular/edit/master/packages/forms/src/directives/control_value_accessor.ts?message=docs(forms)%3A%20describe%20your%20change...#L10-L110\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/angular/angular/tree/6.0.0/packages/forms/src/directives/control_value_accessor.ts#L10-L110\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/forms\", \"name\": \"@angular/forms\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/forms/ControlValueAccessor\", \"name\": \"ControlValueAccessor\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/forms\">@angular/forms</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"controlvalueaccessor\">ControlValueAccessor<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#controlvalueaccessor\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label interface\">interface</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p translation-origin=\"off\">A <code><a href=\"api/forms/ControlValueAccessor\" class=\"code-anchor\">ControlValueAccessor</a></code> acts as a bridge between the Angular forms API and a\nnative element in the DOM.</p>\n<p></p>\n  \n  \n  <section class=\"interface-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\ninterface <a href=\"api/forms/ControlValueAccessor\" class=\"code-anchor\">ControlValueAccessor</a> {\n  <a class=\"code-anchor\" href=\"api/forms/ControlValueAccessor#writeValue\">writeValue(obj: any): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/ControlValueAccessor#registerOnChange\">registerOnChange(fn: any): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/ControlValueAccessor#registerOnTouched\">registerOnTouched(fn: any): void</a>\n  <a class=\"code-anchor\" href=\"api/forms/ControlValueAccessor#setDisabledState\">setDisabledState(isDisabled: boolean)?: void</a>\n}\n</code-example>\n\n  \n  \n\n\n  \n  \n\n</section>\n  \n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-origin=\"off\">Implement this interface if you want to create a custom form control directive\nthat integrates with Angular forms.</p>\n\n</section>\n\n  \n\n  \n\n<section class=\"instance-methods\">\n  <h2 id=\"methods\">Methods<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#methods\"><i class=\"material-icons\">link</i></a></h2>\n  \n    <a id=\"writeValue\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"writevalue\">\n    writeValue()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#writevalue\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-origin=\"off\">Writes a new value to the element.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">writeValue(obj: any): void</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>obj</td>\n      \n      <td class=\"param-description\">\n            <p translation-origin=\"off\">Type: <code>any</code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns\">Returns</h4>\n<p translation-origin=\"off\"><code>void</code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n  <tr>\n      <td class=\"description\">\n        <p translation-origin=\"off\">This method will be called by the forms API to write to the view when programmatic\n(model -> view) changes are requested.</p>\n<p translation-origin=\"off\">Example implementation of <code>writeValue</code>:</p>\n<code-example language=\"ts\">\nwriteValue(value: any): void {\n  this._renderer.setProperty(this._elementRef.nativeElement, 'value', value);\n}\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n    <a id=\"registerOnChange\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"registeronchange\">\n    registerOnChange()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#registeronchange\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-origin=\"off\">Registers a callback function that should be called when the control's value\nchanges in the UI.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">registerOnChange(fn: any): void</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-1\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>fn</td>\n      \n      <td class=\"param-description\">\n            <p translation-origin=\"off\">Type: <code>any</code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns-1\">Returns</h4>\n<p translation-origin=\"off\"><code>void</code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n  <tr>\n      <td class=\"description\">\n        <p translation-origin=\"off\">This is called by the forms API on initialization so it can update the form\nmodel when values propagate from the view (view -> model).</p>\n<p translation-origin=\"off\">If you are implementing <code>registerOnChange</code> in your own value accessor, you\nwill typically want to save the given function so your class can call it\nat the appropriate time.</p>\n<code-example language=\"ts\">\nregisterOnChange(fn: (_: any) => void): void {\n  this._onChange = fn;\n}\n</code-example>\n<p translation-origin=\"off\">When the value changes in the UI, your class should call the registered\nfunction to allow the forms API to update itself:</p>\n<code-example language=\"ts\">\nhost: {\n   (change): '_onChange($event.target.value)'\n}\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n    <a id=\"registerOnTouched\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"registerontouched\">\n    registerOnTouched()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#registerontouched\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-origin=\"off\">Registers a callback function that should be called when the control receives\na blur event.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">registerOnTouched(fn: any): void</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-2\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>fn</td>\n      \n      <td class=\"param-description\">\n            <p translation-origin=\"off\">Type: <code>any</code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns-2\">Returns</h4>\n<p translation-origin=\"off\"><code>void</code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n  <tr>\n      <td class=\"description\">\n        <p translation-origin=\"off\">This is called by the forms API on initialization so it can update the form model\non blur.</p>\n<p translation-origin=\"off\">If you are implementing <code>registerOnTouched</code> in your own value accessor, you\nwill typically want to save the given function so your class can call it\nwhen the control should be considered blurred (a.k.a. \"touched\").</p>\n<code-example language=\"ts\">\nregisterOnTouched(fn: any): void {\n  this._onTouched = fn;\n}\n</code-example>\n<p translation-origin=\"off\">On blur (or equivalent), your class should call the registered function to allow\nthe forms API to update itself:</p>\n<code-example language=\"ts\">\nhost: {\n   '(blur)': '_onTouched()'\n}\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n    <a id=\"setDisabledState\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"setdisabledstate\">\n    setDisabledState()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/forms/ControlValueAccessor#setdisabledstate\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-origin=\"off\">This function is called by the forms API when the control status changes to\nor from \"DISABLED\". Depending on the value, it should enable or disable the\nappropriate DOM element.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">setDisabledState(isDisabled: boolean)?: void</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-3\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>isDisabled</td>\n      \n      <td class=\"param-description\">\n            <p translation-origin=\"off\">Type: <code>boolean</code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns-3\">Returns</h4>\n<p translation-origin=\"off\"><code>void</code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n  <tr>\n      <td class=\"description\">\n        <p translation-origin=\"off\">Example implementation of <code>setDisabledState</code>:</p>\n<code-example language=\"ts\">\nsetDisabledState(isDisabled: boolean): void {\n  this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n}\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n</section>\n\n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/forms\n - api/forms/CheckboxControlValueAccessor\n - api/forms/DefaultValueAccessor\n - api/forms/FormControlDirective\n - api/forms/FormControlName\n - api/forms/NG_VALUE_ACCESSOR\n - api/forms/NgControl\n - api/forms/NgModel\n - api/forms/RadioControlValueAccessor\n - api/forms/SelectControlValueAccessor\n - api/forms/SelectMultipleControlValueAccessor\n - api/upgrade/UpgradeAdapter\n - guide/template-syntax\n-->\n<!-- links from this doc:\n - /api\n - api/forms\n - api/forms/ControlValueAccessor#controlvalueaccessor\n - api/forms/ControlValueAccessor#description\n - api/forms/ControlValueAccessor#methods\n - api/forms/ControlValueAccessor#registerOnChange\n - api/forms/ControlValueAccessor#registerOnTouched\n - api/forms/ControlValueAccessor#registeronchange\n - api/forms/ControlValueAccessor#registerontouched\n - api/forms/ControlValueAccessor#setDisabledState\n - api/forms/ControlValueAccessor#setdisabledstate\n - api/forms/ControlValueAccessor#writeValue\n - api/forms/ControlValueAccessor#writevalue\n - https://github.com/angular/angular/edit/master/packages/forms/src/directives/control_value_accessor.ts?message=docs(forms)%3A%20describe%20your%20change...#L10-L110\n - https://github.com/angular/angular/tree/6.0.0/packages/forms/src/directives/control_value_accessor.ts#L10-L110\n-->"
}