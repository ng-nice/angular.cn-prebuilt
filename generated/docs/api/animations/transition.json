{
  "id": "api/animations/transition",
  "title": "transition",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/angular/angular/edit/master/packages/animations/src/animation_metadata.ts?message=docs(animations)%3A%20describe%20your%20change...#L680-L886\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/angular/angular/tree/6.0.0/packages/animations/src/animation_metadata.ts#L680-L886\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/animations\", \"name\": \"@angular/animations\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/animations/transition\", \"name\": \"transition\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/animations\">@angular/animations</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"transition\">transition<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#transition\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label function\">function</label>\n    \n    <label class=\"api-status-label experimental\">experimental</label>\n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p translation-origin=\"off\"><code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a></code> is an animation-specific function that is designed to be used inside of Angular's\nanimation DSL language. If this information is new, please navigate to the <a href=\"api/core/Component#animations\">component animations metadata page</a> to gain a better understanding of\nhow animations in Angular are used.</p>\n<p></p>\n  \n  \n  \n\n  <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\"> <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(stateChangeExpr: string | ((fromState: string, toState: string, element?: any, params?: {\n    [key: string]: any;\n}) => boolean), steps: <a href=\"api/animations/AnimationMetadata\" class=\"code-anchor\">AnimationMetadata</a> | <a href=\"api/animations/AnimationMetadata\" class=\"code-anchor\">AnimationMetadata</a>[], options: <a href=\"api/animations/AnimationOptions\" class=\"code-anchor\">AnimationOptions</a> | null = null): <a href=\"api/animations/AnimationTransitionMetadata\" class=\"code-anchor\">AnimationTransitionMetadata</a></code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table function-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>stateChangeExpr</td>\n      \n      <td class=\"param-description\">\n            <p translation-origin=\"off\">Type: <code>string | ((fromState: string, toState: string, element?: any, params?: {\n    [key: string]: any;\n}) => boolean)</code>.</p>\n\n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>steps</td>\n      \n      <td class=\"param-description\">\n            <p translation-origin=\"off\">Type: <code><a href=\"api/animations/AnimationMetadata\" class=\"code-anchor\">AnimationMetadata</a> | <a href=\"api/animations/AnimationMetadata\" class=\"code-anchor\">AnimationMetadata</a>[]</code>.</p>\n      \n      </td>\n    </tr>\n    <tr class=\"function-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>options</td>\n      \n      <td class=\"param-description\">\n            <p translation-origin=\"off\">Type: <code><a href=\"api/animations/AnimationOptions\" class=\"code-anchor\">AnimationOptions</a> | null</code>.</p>\n      <p translation-origin=\"off\">Optional. Default is <code>null</code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n<h4 class=\"no-anchor\" id=\"returns\">Returns</h4>\n<p translation-origin=\"off\"><code><a href=\"api/animations/AnimationTransitionMetadata\" class=\"code-anchor\">AnimationTransitionMetadata</a></code></p>\n\n\n\n\n\n\n\n\n\n  \n\n  \n\n<section class=\"description\">\n  <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-origin=\"off\"><code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a></code> declares the <a href=\"api/animations/sequence\">sequence of animation steps</a> that will be run when the\nprovided <code>stateChangeExpr</code> value is satisfied. The <code>stateChangeExpr</code> consists of a <code>state1 => state2</code> which consists of two known states (use an asterix (<code>*</code>) to refer to a dynamic starting\nand/or ending state).</p>\n<p translation-origin=\"off\">A function can also be provided as the <code>stateChangeExpr</code> argument for a transition and this\nfunction will be executed each time a state change occurs. If the value returned within the\nfunction is true then the associated animation will be run.</p>\n<p translation-origin=\"off\">Animation transitions are placed within an <a href=\"api/animations/trigger\">animation trigger</a>. For an transition\nto animate to a state value and persist its styles then one or more <a href=\"api/animations/state\">animation\nstates</a> is expected to be defined.</p>\n<h3 translation-origin=\"off\" id=\"usage\">Usage<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#usage\"><i class=\"material-icons\">link</i></a></h3>\n<p translation-origin=\"off\">An animation transition is kicked off the <code>stateChangeExpr</code> predicate evaluates to true based on\nwhat the previous state is and what the current state has become. In other words, if a transition\nis defined that matches the old/current state criteria then the associated animation will be\ntriggered.</p>\n<code-example language=\"typescript\">\n// all <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>/<a href=\"api/animations/state\" class=\"code-anchor\">state</a> changes are defined within an <a href=\"api/animations/animation\" class=\"code-anchor\">animation</a> <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>\n<a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>(\"myAnimationTrigger\", [\n  // if <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> <a href=\"api/animations/state\" class=\"code-anchor\">state</a> is defined then its styles will be persisted when the\n  // <a href=\"api/animations/animation\" class=\"code-anchor\">animation</a> has fully completed itself\n  <a href=\"api/animations/state\" class=\"code-anchor\">state</a>(\"on\", <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ background: \"green\" })),\n  <a href=\"api/animations/state\" class=\"code-anchor\">state</a>(\"off\", <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ background: \"grey\" })),\n\n  // <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a> <a href=\"api/animations/animation\" class=\"code-anchor\">animation</a> that will be kicked off when the <a href=\"api/animations/state\" class=\"code-anchor\">state</a> value\n  // bound to \"myAnimationTrigger\" changes from \"on\" to \"off\"\n  <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\"on => off\", <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500)),\n\n  // it is also possible to do run the same <a href=\"api/animations/animation\" class=\"code-anchor\">animation</a> for both directions\n  <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\"on &#x3C;=> off\", <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500)),\n\n  // or to define <a href=\"api/forms/SelectMultipleControlValueAccessor\" class=\"code-anchor\">multiple</a> states pairs separated by commas\n  <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\"on => off, off => void\", <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500)),\n\n  // this is <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> catch-all <a href=\"api/animations/state\" class=\"code-anchor\">state</a> change for when an element is inserted into\n  // the page and the destination <a href=\"api/animations/state\" class=\"code-anchor\">state</a> is unknown\n  <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\"void => *\", [\n    <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 0 }),\n    <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500)\n  ]),\n\n  // this will capture <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> <a href=\"api/animations/state\" class=\"code-anchor\">state</a> change between any states\n  <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\"* => *\", <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(\"1s 0s\")),\n\n  // you can also go full out and include <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> function\n  <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>((fromState, toState) => {\n    // when `true` then it will allow the <a href=\"api/animations/animation\" class=\"code-anchor\">animation</a> below to be invoked\n    return fromState == \"off\" &#x26;&#x26; toState == \"on\";\n  }, <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(\"1s 0s\"))\n])\n</code-example>\n<p translation-origin=\"off\">The template associated with this component will make use of the <code>myAnimationTrigger</code> animation\ntrigger by binding to an element within its template code.</p>\n<code-example language=\"html\">\n&#x3C;!-- somewhere inside of my-component-tpl.html -->\n&#x3C;div [@myAnimationTrigger]=\"myStatusExp\">...&#x3C;/div>\n</code-example>\n<h4 translation-origin=\"off\" id=\"the-final-animate-call\">The final <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a></code> call<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#the-final-animate-call\"><i class=\"material-icons\">link</i></a></h4>\n<p translation-origin=\"off\">If the final step within the transition steps is a call to <code><a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>()</code> that <strong>only</strong> uses a\ntiming value with <strong>no style data</strong> then it will be automatically used as the final animation arc\nfor the element to animate itself to the final state. This involves an automatic mix of\nadding/removing CSS styles so that the element will be in the exact state it should be for the\napplied state to be presented correctly.</p>\n<code-example>\n// start off by hiding the element, but make sure that it animates properly to whatever <a href=\"api/animations/state\" class=\"code-anchor\">state</a>\n// is currently active for \"myAnimationTrigger\"\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\"void => *\", [\n  <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 0 }),\n  <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500)\n])\n</code-example>\n<h3 translation-origin=\"off\" id=\"using-enter-and-leave\">Using :enter and :leave<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#using-enter-and-leave\"><i class=\"material-icons\">link</i></a></h3>\n<p translation-origin=\"off\">Given that enter (insertion) and leave (removal) animations are so common, the <code><a href=\"api/animations/transition\" class=\"code-anchor\">transition</a></code>\nfunction accepts both <code>:enter</code> and <code>:leave</code> values which are aliases for the <code>void => *</code> and <code>* => void</code> state changes.</p>\n<code-example>\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\":enter\", [\n  <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 0 }),\n  <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500, <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 1 }))\n]),\n<a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\":leave\", [\n  <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500, <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 0 }))\n])\n</code-example>\n<h3 translation-origin=\"off\" id=\"boolean-values\">Boolean values<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#boolean-values\"><i class=\"material-icons\">link</i></a></h3>\n<p translation-origin=\"off\">if a trigger binding value is a boolean value then it can be matched using a transition\nexpression that compares <code>true</code> and <code>false</code> or <code>1</code> and <code>0</code>.</p>\n<code-example>\n// in the template\n&#x3C;div [@openClose]=\"open ? true : false\">...&#x3C;/div>\n\n// in the component metadata\n<a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>('openClose', [\n  <a href=\"api/animations/state\" class=\"code-anchor\">state</a>('true', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ height: '*' })),\n  <a href=\"api/animations/state\" class=\"code-anchor\">state</a>('false', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ height: '0px' })),\n  <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>('false &#x3C;=> true', <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500))\n])\n</code-example>\n<h3 translation-origin=\"off\" id=\"using-increment-and-decrement\">Using :increment and :decrement<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/animations/transition#using-increment-and-decrement\"><i class=\"material-icons\">link</i></a></h3>\n<p translation-origin=\"off\">In addition to the :enter and :leave transition aliases, the :increment and :decrement aliases\ncan be used to kick off a transition when a numeric value has increased or decreased in value.</p>\n<code-example>\nimport {<a href=\"api/animations/group\" class=\"code-anchor\">group</a>, <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>, <a href=\"api/animations/query\" class=\"code-anchor\">query</a>, <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>, <a href=\"api/animations/style\" class=\"code-anchor\">style</a>, <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>} from '@angular/animations';\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>} from '@angular/core';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'banner-carousel-component',\n  styles: [`\n    .banner-container {\n       position:relative;\n       height:500px;\n       overflow:hidden;\n     }\n    .banner-container > .banner {\n       position:absolute;\n       left:0;\n       top:0;\n       font-size:200px;\n       line-height:500px;\n       font-weight:bold;\n       text-align:center;\n       width:100%;\n     }\n  `],\n  template: `\n    &#x3C;button (click)=\"previous()\">Previous&#x3C;/button>\n    &#x3C;button (click)=\"next()\">Next&#x3C;/button>\n    &#x3C;hr>\n    &#x3C;div [@bannerAnimation]=\"selectedIndex\" class=\"banner-container\">\n      &#x3C;div class=\"banner\" *<a href=\"api/common/NgForOf\" class=\"code-anchor\">ngFor</a>=\"let banner of banners\"> {{ banner }} &#x3C;/div>\n    &#x3C;/div>\n  `,\n  animations: [\n    <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>('bannerAnimation', [\n      <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\":increment\", <a href=\"api/animations/group\" class=\"code-anchor\">group</a>([\n        <a href=\"api/animations/query\" class=\"code-anchor\">query</a>(':enter', [\n          <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ left: '100%' }),\n          <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('0.5s ease-out', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>('*'))\n        ]),\n        <a href=\"api/animations/query\" class=\"code-anchor\">query</a>(':leave', [\n          <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('0.5s ease-out', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ left: '-100%' }))\n        ])\n      ])),\n      <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\":decrement\", <a href=\"api/animations/group\" class=\"code-anchor\">group</a>([\n        <a href=\"api/animations/query\" class=\"code-anchor\">query</a>(':enter', [\n          <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ left: '-100%' }),\n          <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('0.5s ease-out', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>('*'))\n        ]),\n        <a href=\"api/animations/query\" class=\"code-anchor\">query</a>(':leave', [\n          <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>('0.5s ease-out', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ left: '100%' }))\n        ])\n      ]))\n    ])\n  ]\n})\nclass BannerCarouselComponent {\n  allBanners: string[] = ['1', '2', '3', '4'];\n  selectedIndex: number = 0;\n\n  get banners() {\n     return [this.allBanners[this.selectedIndex]];\n  }\n\n  previous() {\n    this.selectedIndex = Math.max(this.selectedIndex - 1, 0);\n  }\n\n  next() {\n    this.selectedIndex = Math.min(this.selectedIndex + 1, this.allBanners.length - 1);\n  }\n}\n</code-example>\n<code-example>\nimport {<a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>, <a href=\"api/animations/state\" class=\"code-anchor\">state</a>, <a href=\"api/animations/style\" class=\"code-anchor\">style</a>, <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>, <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>} from '@angular/animations';\nimport {<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>, <a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>} from '@angular/core';\nimport {<a href=\"api/platform-browser/animations/BrowserAnimationsModule\" class=\"code-anchor\">BrowserAnimationsModule</a>} from '@angular/platform-browser/animations';\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'example-app',\n  styles: [`\n    .toggle-container {\n      background-color:white;\n      border:10px solid black;\n      width:200px;\n      text-align:center;\n      line-height:100px;\n      font-size:50px;\n      box-sizing:border-box;\n      overflow:hidden;\n    }\n  `],\n  animations: [<a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>(\n      'openClose',\n      [\n        <a href=\"api/animations/state\" class=\"code-anchor\">state</a>('collapsed, void', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({height: '0px', color: 'maroon', borderColor: 'maroon'})),\n        <a href=\"api/animations/state\" class=\"code-anchor\">state</a>('expanded', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({height: '*', borderColor: 'green', color: 'green'})),\n        <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>(\n            'collapsed &#x3C;=> expanded', [<a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500, <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({height: '250px'})), <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(500)])\n      ])],\n  template: `\n    &#x3C;button (click)=\"expand()\">Open&#x3C;/button>\n    &#x3C;button (click)=\"collapse()\">Closed&#x3C;/button>\n    &#x3C;hr />\n    &#x3C;div class=\"toggle-container\" [@openClose]=\"stateExpression\">\n      Look at this box\n    &#x3C;/div>\n  `\n})\nexport class MyExpandoCmp {\n  stateExpression: string;\n  constructor() { this.collapse(); }\n  expand() { this.stateExpression = 'expanded'; }\n  collapse() { this.stateExpression = 'collapsed'; }\n}\n\n@<a href=\"api/core/NgModule\" class=\"code-anchor\">NgModule</a>(\n    {imports: [<a href=\"api/platform-browser/animations/BrowserAnimationsModule\" class=\"code-anchor\">BrowserAnimationsModule</a>], declarations: [MyExpandoCmp], bootstrap: [MyExpandoCmp]})\nexport class AppModule {\n}\n\n\n</code-example>\n\n</section>\n\n\n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/animations\n - api/animations/AnimationOptions\n - api/animations/AnimationTransitionMetadata\n - api/animations/animate\n - api/animations/animateChild\n - api/animations/group\n - api/animations/keyframes\n - api/animations/query\n - api/animations/sequence\n - api/animations/stagger\n - api/animations/state\n - api/animations/style\n - api/animations/trigger\n - api/core/Component\n - guide/animations\n - guide/elements\n - guide/router\n-->\n<!-- links from this doc:\n - /api\n - api/animations\n - api/animations/AnimationMetadata\n - api/animations/AnimationOptions\n - api/animations/AnimationTransitionMetadata\n - api/animations/animate\n - api/animations/animation\n - api/animations/group\n - api/animations/query\n - api/animations/sequence\n - api/animations/state\n - api/animations/style\n - api/animations/transition#boolean-values\n - api/animations/transition#description\n - api/animations/transition#the-final-animate-call\n - api/animations/transition#transition\n - api/animations/transition#usage\n - api/animations/transition#using-enter-and-leave\n - api/animations/transition#using-increment-and-decrement\n - api/animations/trigger\n - api/common/NgForOf\n - api/core/Component\n - api/core/Component#animations\n - api/core/NgModule\n - api/forms/SelectMultipleControlValueAccessor\n - api/platform-browser/animations/BrowserAnimationsModule\n - api/router/RouterLinkWithHref\n - https://github.com/angular/angular/edit/master/packages/animations/src/animation_metadata.ts?message=docs(animations)%3A%20describe%20your%20change...#L680-L886\n - https://github.com/angular/angular/tree/6.0.0/packages/animations/src/animation_metadata.ts#L680-L886\n-->"
}