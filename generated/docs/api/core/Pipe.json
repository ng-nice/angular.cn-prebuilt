{
  "id": "api/core/Pipe",
  "title": "Pipe",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/angular/angular/edit/master/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20describe%20your%20change...#L820-L819\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/angular/angular/tree/6.0.0/packages/core/src/metadata/directives.ts#L820-L819\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n        ]\n      }\n    </script>\n    \n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"pipe\">Pipe<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Pipe#pipe\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label decorator\">decorator</label>\n    \n    \n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p translation-origin=\"off\">Pipe decorator and metadata.</p>\n<p></p>\n  \n  \n  \n<section class=\"decorator-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\n@<a href=\"api/core/Pipe\" class=\"code-anchor\">Pipe</a>({ \n  <a class=\"code-anchor\" href=\"api/core/Pipe#name\">name: string</a>\n  <a class=\"code-anchor\" href=\"api/core/Pipe#pure\">pure?: boolean</a>\n})\n</code-example>\n</section>\n\n  \n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Pipe#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-origin=\"off\">Use the <code>@<a href=\"api/core/Pipe\" class=\"code-anchor\">Pipe</a></code> annotation to declare that a given class is a pipe. A pipe\nclass must also implement <a href=\"api/core/PipeTransform\"><code>PipeTransform</code></a> interface.</p>\n<p translation-origin=\"off\">To use the pipe include a reference to the pipe class in\n<a href=\"api/core/NgModule#declarations\"><code>NgModule</code></a>.</p>\n<p translation-origin=\"off\">@Annotation</p>\n\n</section>\n\n  \n<section class=\"metadata-members\">\n  <h2 id=\"options\">Options<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Pipe#options\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table properties-table\">\n    <thead>\n      <tr><th>Property</th><th>Type</th><th>Description</th></tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"name\"></a>name</td>\n        <td><label class=\"property-type-label\"><code>string</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Name of the pipe.</p>\n\n          <p translation-origin=\"off\">The pipe name is used in template bindings. For example if a pipe is named\n<code>myPipe</code> then it would be used in the template binding expression like\nso:  <code>{{ exp | myPipe }}</code>.</p>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"pure\"></a>pure</td>\n        <td><label class=\"property-type-label\"><code>boolean</code></label></td>\n        <td>\n          <p translation-origin=\"off\">If Pipe is pure (its output depends only on its input.)</p>\n\n          <p translation-origin=\"off\">Normally pipe's <code>transform</code> method is only invoked when the inputs to pipe<code>s</code>transform<code>method change. If the pipe has internal <a href=\"api/animations/state\" class=\"code-anchor\">state</a> (it's result are dependent on <a href=\"api/animations/state\" class=\"code-anchor\">state</a> other than its arguments) than set</code>pure<code>to</code>false` so\nthat the pipe is invoked on each change-detection even if the arguments to the\npipe do not change.</p>\n\n          \n        </td>\n    </tr>\n    \n    </tbody>\n  </table>\n</section>\n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/core\n - api/core/WrappedValue\n - api/core/testing/TestBed\n - guide/aot-compiler\n - guide/architecture-components\n - guide/cheatsheet\n - guide/glossary\n - guide/pipes\n - guide/styleguide\n - guide/template-syntax\n - guide/testing\n - guide/upgrade\n-->\n<!-- links from this doc:\n - api/animations/state\n - api/core/NgModule#declarations\n - api/core/Pipe#description\n - api/core/Pipe#name\n - api/core/Pipe#options\n - api/core/Pipe#pipe\n - api/core/Pipe#pure\n - api/core/PipeTransform\n - https://github.com/angular/angular/edit/master/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20describe%20your%20change...#L820-L819\n - https://github.com/angular/angular/tree/6.0.0/packages/core/src/metadata/directives.ts#L820-L819\n-->"
}