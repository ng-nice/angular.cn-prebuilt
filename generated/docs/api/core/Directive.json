{
  "id": "api/core/Directive",
  "title": "Directive",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/angular/angular/edit/master/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20describe%20your%20change...#L404-L404\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/angular/angular/tree/6.0.0/packages/core/src/metadata/directives.ts#L404-L404\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n        ]\n      }\n    </script>\n    \n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"directive\">Directive<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#directive\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label decorator\">decorator</label>\n    \n    \n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p translation-origin=\"off\">Directive decorator and metadata.</p>\n<p></p>\n  \n  \n  \n<section class=\"decorator-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({ \n  <a class=\"code-anchor\" href=\"api/core/Directive#selector\">selector?: string</a>\n  <a class=\"code-anchor\" href=\"api/core/Directive#inputs\">inputs?: string[]</a>\n  <a class=\"code-anchor\" href=\"api/core/Directive#outputs\">outputs?: string[]</a>\n  <a class=\"code-anchor\" href=\"api/core/Directive#host\">host?: {...}</a>\n  <a class=\"code-anchor\" href=\"api/core/Directive#providers\">providers?: Provider[]</a>\n  <a class=\"code-anchor\" href=\"api/core/Directive#exportAs\">exportAs?: string</a>\n  <a class=\"code-anchor\" href=\"api/core/Directive#queries\">queries?: {...}</a>\n})\n</code-example>\n</section>\n\n  \n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-origin=\"off\">Directive decorator allows you to mark a class as an Angular directive and provide additional\nmetadata that determines how the directive should be processed, instantiated and used at\nruntime.</p>\n<p translation-origin=\"off\">Directives allow you to attach behavior to elements in the DOM..</p>\n<p translation-origin=\"off\">A directive must belong to an NgModule in order for it to be usable\nby another directive, component, or application. To specify that a directive is a member of an\nNgModule,\nyou should list it in the <code>declarations</code> field of that NgModule.</p>\n<p translation-origin=\"off\">In addition to the metadata configuration specified via the Directive decorator,\ndirectives can control their runtime behavior by implementing various Life-Cycle hooks.</p>\n<p translation-origin=\"off\"><strong>Metadata Properties:</strong></p>\n<ul>\n<li><strong>exportAs</strong> - name under which the component instance is exported in a template. Can be\ngiven a single name or a comma-delimited list of names.</li>\n<li><strong>host</strong> - map of class property to host element bindings for events, properties and\nattributes</li>\n<li><strong>inputs</strong> - list of class property names to data-bind as component inputs</li>\n<li><strong>outputs</strong> - list of class property names that expose output events that others can\nsubscribe to</li>\n<li><strong>providers</strong> - list of providers available to this component and its children</li>\n<li><strong>queries</strong> -  configure queries that can be injected into the component</li>\n<li><strong>selector</strong> - css selector that identifies this component in a template</li>\n</ul>\n<p translation-origin=\"off\">@Annotation</p>\n\n</section>\n\n  \n<section class=\"metadata-members\">\n  <h2 id=\"options\">Options<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#options\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table properties-table\">\n    <thead>\n      <tr><th>Property</th><th>Type</th><th>Description</th></tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"selector\"></a>selector</td>\n        <td><label class=\"property-type-label\"><code>string</code></label></td>\n        <td>\n          <p translation-origin=\"off\">The CSS selector that triggers the instantiation of a directive.</p>\n\n          <p translation-origin=\"off\">Angular only allows directives to trigger on CSS selectors that do not cross element\nboundaries.</p>\n<p translation-origin=\"off\"><code>selector</code> may be declared as one of the following:</p>\n<ul>\n<li><code>element-name</code>: select by element name.</li>\n<li><code>.class</code>: select by class name.</li>\n<li><code>[attribute]</code>: select by attribute name.</li>\n<li><code>[attribute=value]</code>: select by attribute name and value.</li>\n<li><code>:not(sub_selector)</code>: select only if the element does not match the <code>sub_selector</code>.</li>\n<li><code>selector1, selector2</code>: select if either <code>selector1</code> or <code>selector2</code> matches.</li>\n</ul>\n<h3 translation-origin=\"off\" id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#example\"><i class=\"material-icons\">link</i></a></h3>\n<p translation-origin=\"off\">Suppose we have a directive with an <code>input[type=text]</code> selector.</p>\n<p translation-origin=\"off\">And the following HTML:</p>\n<code-example language=\"html\">\n&#x3C;form>\n  &#x3C;input type=\"text\">\n  &#x3C;input type=\"radio\">\n&#x3C;form>\n</code-example>\n<p translation-origin=\"off\">The directive would only be instantiated on the <code>&#x3C;input type=\"text\"></code> element.</p>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"inputs\"></a>inputs</td>\n        <td><label class=\"property-type-label\"><code>string[]</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Enumerates the set of data-bound input properties for a directive</p>\n\n          <p translation-origin=\"off\">Angular automatically updates input properties during change detection.</p>\n<p translation-origin=\"off\">The <code>inputs</code> property defines a set of <code>directiveProperty</code> to <code>bindingProperty</code>\nconfiguration:</p>\n<ul>\n<li><code>directiveProperty</code> specifies the component property where the value is written.</li>\n<li><code>bindingProperty</code> specifies the DOM property where the value is read from.</li>\n</ul>\n<p translation-origin=\"off\">When <code>bindingProperty</code> is not provided, it is assumed to be equal to <code>directiveProperty</code>.</p>\n<h3 translation-origin=\"off\" id=\"example-live-demo\">Example (<a href=\"http://plnkr.co/edit/ivhfXY?p=preview\">live demo</a>)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#example-live-demo\"><i class=\"material-icons\">link</i></a></h3>\n<p translation-origin=\"off\">The following example creates a component with two data-bound properties.</p>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'bank-account',\n  inputs: ['bankName', 'id: account-id'],\n  template: `\n    Bank Name: {{bankName}}\n    Account Id: {{id}}\n  `\n})\nclass BankAccount {\n  bankName: string;\n  id: string;\n\n  // this property is not bound, and won't be automatically updated by Angular\n  normalizedBankName: string;\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app',\n  template: `\n    &#x3C;bank-account bankName=\"RBC\" account-id=\"4747\">&#x3C;/bank-account>\n  `\n})\nclass App {}\n</code-example>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"outputs\"></a>outputs</td>\n        <td><label class=\"property-type-label\"><code>string[]</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Enumerates the set of event-bound output properties.</p>\n\n          <p translation-origin=\"off\">When an output property emits an event, an event handler attached to that event\nthe template is invoked.</p>\n<p translation-origin=\"off\">The <code>outputs</code> property defines a set of <code>directiveProperty</code> to <code>bindingProperty</code>\nconfiguration:</p>\n<ul>\n<li><code>directiveProperty</code> specifies the component property that emits events.</li>\n<li><code>bindingProperty</code> specifies the DOM property the event handler is attached to.</li>\n</ul>\n<h3 translation-origin=\"off\" id=\"example-live-demo-1\">Example (<a href=\"http://plnkr.co/edit/d5CNq7?p=preview\">live demo</a>)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#example-live-demo-1\"><i class=\"material-icons\">link</i></a></h3>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  selector: 'interval-dir',\n  outputs: ['everySecond', 'five5Secs: everyFiveSeconds']\n})\nclass IntervalDir {\n  everySecond = new <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>();\n  five5Secs = new <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>();\n\n  constructor() {\n    setInterval(() => this.everySecond.emit(\"event\"), 1000);\n    setInterval(() => this.five5Secs.emit(\"event\"), 5000);\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app',\n  template: `\n    &#x3C;interval-dir (everySecond)=\"everySecond()\" (everyFiveSeconds)=\"everyFiveSeconds()\">\n    &#x3C;/interval-dir>\n  `\n})\nclass App {\n  everySecond() { console.log('second'); }\n  everyFiveSeconds() { console.log('five seconds'); }\n}\n</code-example>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"host\"></a>host</td>\n        <td><label class=\"property-type-label\"><code>{\n    [key: string]: string;\n}</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Specify the events, actions, properties and attributes related to the host element.</p>\n\n          <h2 translation-origin=\"off\" id=\"host-listeners\">Host Listeners<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#host-listeners\"><i class=\"material-icons\">link</i></a></h2>\n<p translation-origin=\"off\">Specifies which DOM events a directive listens to via a set of <code>(event)</code> to <code>method</code>\nkey-value pairs:</p>\n<ul>\n<li><code>event</code>: the DOM event that the directive listens to.</li>\n<li><code>statement</code>: the statement to execute when the event occurs.\nIf the evaluation of the statement returns <code>false</code>, then <code>preventDefault</code>is applied on the DOM\nevent.</li>\n</ul>\n<p translation-origin=\"off\">To listen to global events, a target must be added to the event name.\nThe target can be <code>window</code>, <code>document</code> or <code>body</code>.</p>\n<p translation-origin=\"off\">When writing a directive event binding, you can also refer to the $event local variable.</p>\n<h3 translation-origin=\"off\" id=\"example-live-demo-2\">Example (<a href=\"http://plnkr.co/edit/DlA5KU?p=preview\">live demo</a>)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#example-live-demo-2\"><i class=\"material-icons\">link</i></a></h3>\n<p translation-origin=\"off\">The following example declares a directive that attaches a click listener to the button and\ncounts clicks.</p>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  selector: 'button[counting]',\n  host: {\n    '(click)': 'onClick($event.target)'\n  }\n})\nclass CountClicks {\n  numberOfClicks = 0;\n\n  onClick(btn) {\n    console.log(\"button\", btn, \"number of clicks:\", this.numberOfClicks++);\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app',\n  template: `&#x3C;button counting>Increment&#x3C;/button>`\n})\nclass App {}\n</code-example>\n<h2 translation-origin=\"off\" id=\"host-property-bindings\">Host Property Bindings<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#host-property-bindings\"><i class=\"material-icons\">link</i></a></h2>\n<p translation-origin=\"off\">Specifies which DOM properties a directive updates.</p>\n<p translation-origin=\"off\">Angular automatically checks host property bindings during change detection.\nIf a binding changes, it will update the host element of the directive.</p>\n<h3 translation-origin=\"off\" id=\"example-live-demo-3\">Example (<a href=\"http://plnkr.co/edit/gNg0ED?p=preview\">live demo</a>)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#example-live-demo-3\"><i class=\"material-icons\">link</i></a></h3>\n<p translation-origin=\"off\">The following example creates a directive that sets the <code>valid</code> and <code>invalid</code> classes\non the DOM element that has ngModel directive on it.</p>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  selector: '[<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>]',\n  host: {\n    '[class.valid]': 'valid',\n    '[class.invalid]': 'invalid'\n  }\n})\nclass NgModelStatus {\n  constructor(public control:<a href=\"api/forms/NgModel\" class=\"code-anchor\">NgModel</a>) {}\n  get valid { return this.control.valid; }\n  get invalid { return this.control.invalid; }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app',\n  template: `&#x3C;input [(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]=\"prop\">`\n})\nclass App {\n  prop;\n}\n</code-example>\n<h2 translation-origin=\"off\" id=\"attributes\">Attributes<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#attributes\"><i class=\"material-icons\">link</i></a></h2>\n<p translation-origin=\"off\">Specifies static attributes that should be propagated to a host element.</p>\n<h3 translation-origin=\"off\" id=\"example-1\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#example-1\"><i class=\"material-icons\">link</i></a></h3>\n<p translation-origin=\"off\">In this example using <code>my-button</code> directive (ex.: <code>&#x3C;div my-button>&#x3C;/div></code>) on a host element\n(here: <code>&#x3C;div></code> ) will ensure that this element will get the \"button\" role.</p>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  selector: '[my-button]',\n  host: {\n    'role': 'button'\n  }\n})\nclass MyButton {\n}\n</code-example>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"providers\"></a>providers</td>\n        <td><label class=\"property-type-label\"><code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a>[]</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Defines the set of injectable objects that are visible to a Directive and its light DOM\nchildren.</p>\n\n          <h2 translation-origin=\"off\" id=\"simple-example\">Simple Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#simple-example\"><i class=\"material-icons\">link</i></a></h2>\n<p translation-origin=\"off\">Here is an example of a class that can be injected:</p>\n<code-example>\nclass Greeter {\n   greet(name:string) {\n     return 'Hello ' + name + '!';\n   }\n}\n\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  selector: 'greet',\n  providers: [\n    Greeter\n  ]\n})\nclass HelloWorld {\n  greeter:Greeter;\n\n  constructor(greeter:Greeter) {\n    this.greeter = greeter;\n  }\n}\n</code-example>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"exportAs\"></a>exportAs</td>\n        <td><label class=\"property-type-label\"><code>string</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Defines the name that can be used in the template to assign this directive to a variable.</p>\n\n          <h2 translation-origin=\"off\" id=\"simple-example-1\">Simple Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#simple-example-1\"><i class=\"material-icons\">link</i></a></h2>\n<code-example>\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  selector: 'child-dir',\n  exportAs: 'child'\n})\nclass ChildDir {\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'main',\n  template: `&#x3C;child-dir #c=\"child\">&#x3C;/child-dir>`\n})\nclass MainComponent {\n}\n</code-example>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"queries\"></a>queries</td>\n        <td><label class=\"property-type-label\"><code>{\n    [key: string]: any;\n}</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Configures the queries that will be injected into the directive.</p>\n\n          <p translation-origin=\"off\">Content queries are set before the <code>ngAfterContentInit</code> callback is called.\nView queries are set before the <code>ngAfterViewInit</code> callback is called.</p>\n<h3 translation-origin=\"off\" id=\"example-2\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Directive#example-2\"><i class=\"material-icons\">link</i></a></h3>\n<code-example>\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'someDir',\n  queries: {\n    contentChildren: new <a href=\"api/core/ContentChildren\" class=\"code-anchor\">ContentChildren</a>(ChildDirective),\n    viewChildren: new <a href=\"api/core/ViewChildren\" class=\"code-anchor\">ViewChildren</a>(ChildDirective)\n  },\n  template: '&#x3C;child-directive>&#x3C;/child-directive>'\n})\nclass SomeDir {\n  contentChildren: <a href=\"api/core/QueryList\" class=\"code-anchor\">QueryList</a>&#x3C;ChildDirective>,\n  viewChildren: <a href=\"api/core/QueryList\" class=\"code-anchor\">QueryList</a>&#x3C;ChildDirective>\n\n  ngAfterContentInit() {\n    // contentChildren is set\n  }\n\n  ngAfterViewInit() {\n    // viewChildren is set\n  }\n}\n</code-example>\n\n          \n        </td>\n    </tr>\n    \n    </tbody>\n  </table>\n</section>\n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/common/NgClass\n - api/common/NgComponentOutlet\n - api/common/NgForOf\n - api/common/NgIf\n - api/common/NgPlural\n - api/common/NgPluralCase\n - api/common/NgStyle\n - api/common/NgSwitch\n - api/common/NgSwitchCase\n - api/common/NgSwitchDefault\n - api/common/NgTemplateOutlet\n - api/core\n - api/core/Component\n - api/core/ContentChild\n - api/core/ContentChildDecorator\n - api/core/ContentChildren\n - api/core/ContentChildrenDecorator\n - api/core/DirectiveDecorator\n - api/core/Host\n - api/core/HostDecorator\n - api/core/ViewChild\n - api/core/ViewChildDecorator\n - api/core/ViewChildren\n - api/core/ViewChildrenDecorator\n - api/core/ViewContainerRef\n - api/core/testing/TestBed\n - api/forms/CheckboxControlValueAccessor\n - api/forms/CheckboxRequiredValidator\n - api/forms/DefaultValueAccessor\n - api/forms/EmailValidator\n - api/forms/FormArrayName\n - api/forms/FormControlDirective\n - api/forms/FormControlName\n - api/forms/FormGroupDirective\n - api/forms/FormGroupName\n - api/forms/MaxLengthValidator\n - api/forms/MinLengthValidator\n - api/forms/NG_VALIDATORS\n - api/forms/NgControlStatus\n - api/forms/NgControlStatusGroup\n - api/forms/NgForm\n - api/forms/NgModel\n - api/forms/NgModelGroup\n - api/forms/NgSelectOption\n - api/forms/PatternValidator\n - api/forms/RadioControlValueAccessor\n - api/forms/RequiredValidator\n - api/forms/SelectControlValueAccessor\n - api/forms/SelectMultipleControlValueAccessor\n - api/forms/Validator\n - api/router/RouterLink\n - api/router/RouterLinkActive\n - api/router/RouterLinkWithHref\n - api/router/RouterOutlet\n - api/upgrade/static/UpgradeComponent\n - guide/aot-compiler\n - guide/architecture-components\n - guide/attribute-directives\n - guide/bootstrapping\n - guide/cheatsheet\n - guide/dependency-injection-in-action\n - guide/dynamic-component-loader\n - guide/form-validation\n - guide/forms\n - guide/glossary\n - guide/lifecycle-hooks\n - guide/npm-packages\n - guide/structural-directives\n - guide/styleguide\n - guide/template-syntax\n - guide/testing\n - guide/upgrade\n-->\n<!-- links from this doc:\n - api/core/Component\n - api/core/ContentChildren\n - api/core/Directive#attributes\n - api/core/Directive#description\n - api/core/Directive#directive\n - api/core/Directive#example\n - api/core/Directive#example-1\n - api/core/Directive#example-2\n - api/core/Directive#example-live-demo\n - api/core/Directive#example-live-demo-1\n - api/core/Directive#example-live-demo-2\n - api/core/Directive#example-live-demo-3\n - api/core/Directive#exportAs\n - api/core/Directive#host\n - api/core/Directive#host-listeners\n - api/core/Directive#host-property-bindings\n - api/core/Directive#inputs\n - api/core/Directive#options\n - api/core/Directive#outputs\n - api/core/Directive#providers\n - api/core/Directive#queries\n - api/core/Directive#selector\n - api/core/Directive#simple-example\n - api/core/Directive#simple-example-1\n - api/core/EventEmitter\n - api/core/Provider\n - api/core/QueryList\n - api/core/ViewChildren\n - api/forms/NgModel\n - http://plnkr.co/edit/DlA5KU?p=preview\n - http://plnkr.co/edit/d5CNq7?p=preview\n - http://plnkr.co/edit/gNg0ED?p=preview\n - http://plnkr.co/edit/ivhfXY?p=preview\n - https://github.com/angular/angular/edit/master/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20describe%20your%20change...#L404-L404\n - https://github.com/angular/angular/tree/6.0.0/packages/core/src/metadata/directives.ts#L404-L404\n-->"
}