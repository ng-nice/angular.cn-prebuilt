{
  "id": "api/core/ChangeDetectorRef",
  "title": "ChangeDetectorRef",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/angular/angular/edit/master/packages/core/src/change_detection/change_detector_ref.ts?message=docs(core)%3A%20describe%20your%20change...#L1-L185\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/angular/angular/tree/6.0.0/packages/core/src/change_detection/change_detector_ref.ts#L1-L185\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/core\", \"name\": \"@angular/core\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/core/ChangeDetectorRef\", \"name\": \"ChangeDetectorRef\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/core\">@angular/core</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"changedetectorref\">ChangeDetectorRef<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#changedetectorref\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    \n    <label class=\"api-status-label stable\">stable</label>\n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p>\n  \n  \n  \n  <section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nabstract class <a href=\"api/core/ChangeDetectorRef\" class=\"code-anchor\">ChangeDetectorRef</a> {\n  <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#markForCheck\">abstract markForCheck(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#detach\">abstract detach(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#detectChanges\">abstract detectChanges(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#checkNoChanges\">abstract checkNoChanges(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#reattach\">abstract reattach(): void</a>\n}\n</code-example>\n\n  \n  \n  <div class=\"descendants class\">\n    <h2 id=\"subclasses\">Subclasses<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#subclasses\"><i class=\"material-icons\">link</i></a></h2>\n    \n\n<ul>\n  \n    <li>\n      <code><a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a></code>\n      \n\n<ul>\n  \n    <li>\n      <code><a href=\"api/core/EmbeddedViewRef\" class=\"code-anchor\">EmbeddedViewRef</a></code>\n      \n\n\n    </li>\n  \n</ul>\n\n\n    </li>\n  \n</ul>\n\n\n  </div>\n  \n\n</section>\n\n\n  \n\n  \n  \n  \n  \n\n  \n\n  \n\n  \n\n\n  \n\n<section class=\"instance-methods\">\n  <h2 id=\"methods\">Methods<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#methods\"><i class=\"material-icons\">link</i></a></h2>\n  \n    <a id=\"markForCheck\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"markforcheck\">\n    markForCheck()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#markforcheck\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-origin=\"off\">Marks a view and all of its ancestors dirty.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">abstract markForCheck(): void</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters\">Parameters</h4>\n<p>There are no parameters.</p>\n\n\n<h4 class=\"no-anchor\" id=\"returns\">Returns</h4>\n<p translation-origin=\"off\"><code>void</code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n  <tr>\n      <td class=\"description\">\n        <p translation-origin=\"off\">This can be used to ensure an <a href=\"api/core/ChangeDetectionStrategy#OnPush\">OnPush</a> component is\nchecked when it needs to be re-rendered but the two normal triggers haven't marked it\ndirty (i.e. inputs haven't changed and events haven't fired in the view).</p>\n<!-- TODO: Add a link to a chapter on OnPush components -->\n<h3 translation-origin=\"off\" id=\"example-live-demo\">Example (<a href=\"https://stackblitz.com/edit/angular-kx7rrw\">live demo</a>)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#example-live-demo\"><i class=\"material-icons\">link</i></a></h3>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'my-app',\n  template: `Number of ticks: {{numberOfTicks}}`\n  changeDetection: <a href=\"api/core/ChangeDetectionStrategy#OnPush\" class=\"code-anchor\">ChangeDetectionStrategy.OnPush</a>,\n})\nclass AppComponent {\n  numberOfTicks = 0;\n\n  constructor(private ref: <a href=\"api/core/ChangeDetectorRef\" class=\"code-anchor\">ChangeDetectorRef</a>) {\n    setInterval(() => {\n      this.numberOfTicks++;\n      // the following is required, otherwise the view will not be updated\n      this.ref.markForCheck();\n    }, 1000);\n  }\n}\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n    <a id=\"detach\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"detach\">\n    detach()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#detach\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-origin=\"off\">Detaches the view from the change detection tree.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">abstract detach(): void</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-1\">Parameters</h4>\n<p>There are no parameters.</p>\n\n\n<h4 class=\"no-anchor\" id=\"returns-1\">Returns</h4>\n<p translation-origin=\"off\"><code>void</code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n  <tr>\n      <td class=\"description\">\n        <p translation-origin=\"off\">Detached views will not be checked during change detection runs until they are\nre-attached, even if they are dirty. <code>detach</code> can be used in combination with\n<a href=\"api/core/ChangeDetectorRef#detectChanges\">detectChanges</a> to implement local change\ndetection checks.</p>\n<!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n<!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n<h3 translation-origin=\"off\" id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#example\"><i class=\"material-icons\">link</i></a></h3>\n<p translation-origin=\"off\">The following example defines a component with a large list of readonly data.\nImagine the data changes constantly, many times per second. For performance reasons,\nwe want to check and update the list every five seconds. We can do that by detaching\nthe component's change detector and doing a local check every five seconds.</p>\n<code-example language=\"typescript\">\nclass DataProvider {\n  // in <a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a> real application the returned data will be different every time\n  get data() {\n    return [1,2,3,4,5];\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'giant-list',\n  template: `\n    &#x3C;li *<a href=\"api/common/NgForOf\" class=\"code-anchor\">ngFor</a>=\"let d of dataProvider.data\"><a href=\"api/router/Data\" class=\"code-anchor\">Data</a> {{d}}&#x3C;/li>\n  `,\n})\nclass GiantList {\n  constructor(private ref: <a href=\"api/core/ChangeDetectorRef\" class=\"code-anchor\">ChangeDetectorRef</a>, private dataProvider: DataProvider) {\n    ref.detach();\n    setInterval(() => {\n      this.ref.detectChanges();\n    }, 5000);\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'app',\n  providers: [DataProvider],\n  template: `\n    &#x3C;giant-list>&#x3C;giant-list>\n  `,\n})\nclass App {\n}\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n    <a id=\"detectChanges\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"detectchanges\">\n    detectChanges()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#detectchanges\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-origin=\"off\">Checks the view and its children.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">abstract detectChanges(): void</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-2\">Parameters</h4>\n<p>There are no parameters.</p>\n\n\n<h4 class=\"no-anchor\" id=\"returns-2\">Returns</h4>\n<p translation-origin=\"off\"><code>void</code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n  <tr>\n      <td class=\"description\">\n        <p translation-origin=\"off\">This can also be used in combination with <a href=\"api/core/ChangeDetectorRef#detach\">detach</a> to implement\nlocal change detection checks.</p>\n<!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n<!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n<h3 translation-origin=\"off\" id=\"example-1\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#example-1\"><i class=\"material-icons\">link</i></a></h3>\n<p translation-origin=\"off\">The following example defines a component with a large list of readonly data.\nImagine, the data changes constantly, many times per second. For performance reasons,\nwe want to check and update the list every five seconds.</p>\n<p translation-origin=\"off\">We can do that by detaching the component's change detector and doing a local change detection\ncheck every five seconds.</p>\n<p translation-origin=\"off\">See <a href=\"api/core/ChangeDetectorRef#detach\">detach</a> for more information.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n    <a id=\"checkNoChanges\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"checknochanges\">\n    checkNoChanges()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#checknochanges\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-origin=\"off\">Checks the change detector and its children, and throws if any changes are detected.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">abstract checkNoChanges(): void</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-3\">Parameters</h4>\n<p>There are no parameters.</p>\n\n\n<h4 class=\"no-anchor\" id=\"returns-3\">Returns</h4>\n<p translation-origin=\"off\"><code>void</code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n  <tr>\n      <td class=\"description\">\n        <p translation-origin=\"off\">This is used in development mode to verify that running change detection doesn't introduce\nother changes.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n    <a id=\"reattach\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"reattach\">\n    reattach()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#reattach\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-origin=\"off\">Re-attaches the view to the change detection tree.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">abstract reattach(): void</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-4\">Parameters</h4>\n<p>There are no parameters.</p>\n\n\n<h4 class=\"no-anchor\" id=\"returns-4\">Returns</h4>\n<p translation-origin=\"off\"><code>void</code></p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n  <tr>\n      <td class=\"description\">\n        <p translation-origin=\"off\">This can be used to re-attach views that were previously detached from the tree\nusing <a href=\"api/core/ChangeDetectorRef#detach\">detach</a>. Views are attached to the tree by default.</p>\n<!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n<h3 translation-origin=\"off\" id=\"example-live-demo-1\">Example (<a href=\"https://stackblitz.com/edit/angular-ymgsxw\">live demo</a>)<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/ChangeDetectorRef#example-live-demo-1\"><i class=\"material-icons\">link</i></a></h3>\n<p translation-origin=\"off\">The following example creates a component displaying <code>live</code> data. The component will detach\nits change detector from the main change detector tree when the component's live property\nis set to false.</p>\n<code-example language=\"typescript\">\nclass DataProvider {\n  data = 1;\n\n  constructor() {\n    setInterval(() => {\n      this.data = this.data * 2;\n    }, 500);\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'live-data',\n  inputs: ['live'],\n  template: '<a href=\"api/router/Data\" class=\"code-anchor\">Data</a>: {{dataProvider.data}}'\n})\nclass LiveData {\n  constructor(private ref: <a href=\"api/core/ChangeDetectorRef\" class=\"code-anchor\">ChangeDetectorRef</a>, private dataProvider: DataProvider) {}\n\n  set live(value) {\n    if (value) {\n      this.ref.reattach();\n    } else {\n      this.ref.detach();\n    }\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'my-app',\n  providers: [DataProvider],\n  template: `\n    Live Update: &#x3C;input type=\"checkbox\" [(<a href=\"api/forms/NgModel\" class=\"code-anchor\">ngModel</a>)]=\"live\">\n    &#x3C;live-data [live]=\"live\">&#x3C;live-data>\n  `,\n})\nclass AppComponent {\n  live = true;\n}\n</code-example>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n  \n</section>\n\n\n  \n\n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/core\n - api/core/ComponentRef\n - api/core/EmbeddedViewRef\n - api/core/ViewRef\n - api/core/testing/ComponentFixture\n - api/router/RouterLinkActive\n - api/router/RouterOutlet\n - guide/testing\n-->\n<!-- links from this doc:\n - /api\n - api/common/NgForOf\n - api/core\n - api/core/ChangeDetectionStrategy#OnPush\n - api/core/ChangeDetectorRef#changedetectorref\n - api/core/ChangeDetectorRef#checkNoChanges\n - api/core/ChangeDetectorRef#checknochanges\n - api/core/ChangeDetectorRef#detach\n - api/core/ChangeDetectorRef#detectChanges\n - api/core/ChangeDetectorRef#detectchanges\n - api/core/ChangeDetectorRef#example\n - api/core/ChangeDetectorRef#example-1\n - api/core/ChangeDetectorRef#example-live-demo\n - api/core/ChangeDetectorRef#example-live-demo-1\n - api/core/ChangeDetectorRef#markForCheck\n - api/core/ChangeDetectorRef#markforcheck\n - api/core/ChangeDetectorRef#methods\n - api/core/ChangeDetectorRef#reattach\n - api/core/ChangeDetectorRef#subclasses\n - api/core/Component\n - api/core/EmbeddedViewRef\n - api/core/ViewRef\n - api/forms/NgModel\n - api/router/Data\n - api/router/RouterLinkWithHref\n - https://github.com/angular/angular/edit/master/packages/core/src/change_detection/change_detector_ref.ts?message=docs(core)%3A%20describe%20your%20change...#L1-L185\n - https://github.com/angular/angular/tree/6.0.0/packages/core/src/change_detection/change_detector_ref.ts#L1-L185\n - https://stackblitz.com/edit/angular-kx7rrw\n - https://stackblitz.com/edit/angular-ymgsxw\n-->"
}