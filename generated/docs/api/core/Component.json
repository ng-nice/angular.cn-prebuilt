{
  "id": "api/core/Component",
  "title": "Component",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/angular/angular/edit/master/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20describe%20your%20change...#L756-L757\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/angular/angular/tree/6.0.0/packages/core/src/metadata/directives.ts#L756-L757\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n        ]\n      }\n    </script>\n    \n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"component\">Component<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#component\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label decorator\">decorator</label>\n    \n    \n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p translation-origin=\"off\">Component decorator and metadata.</p>\n<p></p>\n  \n  \n  \n<section class=\"decorator-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({ \n  <a class=\"code-anchor\" href=\"api/core/Component#changeDetection\">changeDetection?: ChangeDetectionStrategy</a>\n  <a class=\"code-anchor\" href=\"api/core/Component#viewProviders\">viewProviders?: Provider[]</a>\n  <a class=\"code-anchor\" href=\"api/core/Component#moduleId\">moduleId?: string</a>\n  <a class=\"code-anchor\" href=\"api/core/Component#templateUrl\">templateUrl?: string</a>\n  <a class=\"code-anchor\" href=\"api/core/Component#template\">template?: string</a>\n  <a class=\"code-anchor\" href=\"api/core/Component#styleUrls\">styleUrls?: string[]</a>\n  <a class=\"code-anchor\" href=\"api/core/Component#styles\">styles?: string[]</a>\n  <a class=\"code-anchor\" href=\"api/core/Component#animations\">animations?: any[]</a>\n  <a class=\"code-anchor\" href=\"api/core/Component#encapsulation\">encapsulation?: ViewEncapsulation</a>\n  <a class=\"code-anchor\" href=\"api/core/Component#interpolation\">interpolation?: [string, string]</a>\n  <a class=\"code-anchor\" href=\"api/core/Component#entryComponents\">entryComponents?: Array&#x3C;Type&#x3C;any> | any[]></a>\n  <a class=\"code-anchor\" href=\"api/core/Component#preserveWhitespaces\">preserveWhitespaces?: boolean</a>\n\n  // inherited from <a class=\"code-anchor\" href=\"api/core/Directive\">core/Directive</a>\n  <a class=\"code-anchor\" href=\"api/core/Directive#selector\">selector?: string</a>\n  <a class=\"code-anchor\" href=\"api/core/Directive#inputs\">inputs?: string[]</a>\n  <a class=\"code-anchor\" href=\"api/core/Directive#outputs\">outputs?: string[]</a>\n  <a class=\"code-anchor\" href=\"api/core/Directive#host\">host?: {...}</a>\n  <a class=\"code-anchor\" href=\"api/core/Directive#providers\">providers?: Provider[]</a>\n  <a class=\"code-anchor\" href=\"api/core/Directive#exportAs\">exportAs?: string</a>\n  <a class=\"code-anchor\" href=\"api/core/Directive#queries\">queries?: {...}</a>\n})\n</code-example>\n</section>\n\n  \n\n  \n  \n<section class=\"description\">\n  <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-origin=\"off\">Component decorator allows you to mark a class as an Angular component and provide additional\nmetadata that determines how the component should be processed, instantiated and used at\nruntime.</p>\n<p translation-origin=\"off\">Components are the most basic building block of an UI in an Angular application.\nAn Angular application is a tree of Angular components.\nAngular components are a subset of directives. Unlike directives, components always have\na template and only one component can be instantiated per an element in a template.</p>\n<p translation-origin=\"off\">A component must belong to an NgModule in order for it to be usable\nby another component or application. To specify that a component is a member of an NgModule,\nyou should list it in the <code>declarations</code> field of that NgModule.</p>\n<p translation-origin=\"off\">In addition to the metadata configuration specified via the Component decorator,\ncomponents can control their runtime behavior by implementing various Life-Cycle hooks.</p>\n<p translation-origin=\"off\"><strong>Metadata Properties:</strong></p>\n<ul>\n<li><strong>animations</strong> - list of animations of this component</li>\n<li><strong>changeDetection</strong> - change detection strategy used by this component</li>\n<li><strong>encapsulation</strong> - style encapsulation strategy used by this component</li>\n<li><strong>entryComponents</strong> - list of components that are dynamically inserted into the view of this\ncomponent</li>\n<li><strong>exportAs</strong> - name under which the component instance is exported in a template</li>\n<li><strong>host</strong> - map of class property to host element bindings for events, properties and\nattributes</li>\n<li><strong>inputs</strong> - list of class property names to data-bind as component inputs</li>\n<li><strong>interpolation</strong> - custom interpolation markers used in this component's template</li>\n<li><strong>moduleId</strong> - ES/CommonJS module id of the file in which this component is defined</li>\n<li><strong>outputs</strong> - list of class property names that expose output events that others can\nsubscribe to</li>\n<li><strong>providers</strong> - list of providers available to this component and its children</li>\n<li><strong>queries</strong> -  configure queries that can be injected into the component</li>\n<li><strong>selector</strong> - css selector that identifies this component in a template</li>\n<li><strong>styleUrls</strong> - list of urls to stylesheets to be applied to this component's view</li>\n<li><strong>styles</strong> - inline-defined styles to be applied to this component's view</li>\n<li><strong>template</strong> - inline-defined template for the view</li>\n<li><strong>templateUrl</strong> - url to an external file containing a template for the view</li>\n<li><strong>viewProviders</strong> - list of providers available to this component and its view children</li>\n</ul>\n<h3 translation-origin=\"off\" id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#example\"><i class=\"material-icons\">link</i></a></h3>\n<code-example>\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({selector: 'greet', template: 'Hello {{name}}!'})\nclass Greet {\n  name: string = 'World';\n}\n\n</code-example>\n<p translation-origin=\"off\">@Annotation</p>\n\n</section>\n\n  \n<section class=\"metadata-members\">\n  <h2 id=\"options\">Options<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#options\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table properties-table\">\n    <thead>\n      <tr><th>Property</th><th>Type</th><th>Description</th></tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"changeDetection\"></a>changeDetection</td>\n        <td><label class=\"property-type-label\"><code><a href=\"api/core/ChangeDetectionStrategy\" class=\"code-anchor\">ChangeDetectionStrategy</a></code></label></td>\n        <td>\n          <p translation-origin=\"off\">Defines the used change detection strategy.</p>\n\n          <p translation-origin=\"off\">When a component is instantiated, Angular creates a change detector, which is responsible for\npropagating the component's bindings.</p>\n<p translation-origin=\"off\">The <code>changeDetection</code> property defines, whether the change detection will be checked every time\nor only when the component tells it to do so.</p>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"viewProviders\"></a>viewProviders</td>\n        <td><label class=\"property-type-label\"><code><a href=\"api/core/Provider\" class=\"code-anchor\">Provider</a>[]</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Defines the set of injectable objects that are visible to its view DOM children.</p>\n\n          <h2 translation-origin=\"off\" id=\"simple-example\">Simple Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#simple-example\"><i class=\"material-icons\">link</i></a></h2>\n<p translation-origin=\"off\">Here is an example of a class that can be injected:</p>\n<code-example>\nclass Greeter {\n   greet(name:string) {\n     return 'Hello ' + name + '!';\n   }\n}\n\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  selector: 'needs-greeter'\n})\nclass NeedsGreeter {\n  greeter:Greeter;\n\n  constructor(greeter:Greeter) {\n    this.greeter = greeter;\n  }\n}\n\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'greet',\n  viewProviders: [\n    Greeter\n  ],\n  template: `&#x3C;needs-greeter>&#x3C;/needs-greeter>`\n})\nclass HelloWorld {\n}\n</code-example>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"moduleId\"></a>moduleId</td>\n        <td><label class=\"property-type-label\"><code>string</code></label></td>\n        <td>\n          <p translation-origin=\"off\">The module id of the module that contains the component.\nNeeded to be able to resolve relative urls for templates and styles.\nIn CommonJS, this can always be set to <code>module.id</code>, similarly SystemJS exposes <code>__moduleName</code>\nvariable within each module.</p>\n\n          <h2 translation-origin=\"off\" id=\"simple-example-1\">Simple Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#simple-example-1\"><i class=\"material-icons\">link</i></a></h2>\n<code-example>\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({\n  selector: 'someDir',\n  moduleId: module.id\n})\nclass SomeDir {\n}\n</code-example>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"templateUrl\"></a>templateUrl</td>\n        <td><label class=\"property-type-label\"><code>string</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Specifies a template URL for an Angular component.</p>\n\n          <p translation-origin=\"off\">Only one of <code>templateUrl</code> or <code>template</code> can be defined per View.</p>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"template\"></a>template</td>\n        <td><label class=\"property-type-label\"><code>string</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Specifies an inline template for an Angular component.</p>\n\n          <p translation-origin=\"off\">Only one of <code>templateUrl</code> or <code>template</code> can be defined per Component.</p>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"styleUrls\"></a>styleUrls</td>\n        <td><label class=\"property-type-label\"><code>string[]</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Specifies stylesheet URLs for an Angular component.</p>\n\n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"styles\"></a>styles</td>\n        <td><label class=\"property-type-label\"><code>string[]</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Specifies inline stylesheets for an Angular component.</p>\n\n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"animations\"></a>animations</td>\n        <td><label class=\"property-type-label\"><code>any[]</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Animations are defined on components via an animation-like DSL. This DSL approach to describing\nanimations allows for a flexibility that both benefits developers and the framework.</p>\n\n          <p translation-origin=\"off\">Animations work by listening on state changes that occur on an element within\nthe template. When a state change occurs, Angular can then take advantage and animate the\narc in between. This works similar to how CSS transitions work, however, by having a\nprogrammatic DSL, animations are not limited to environments that are DOM-specific.\n(Angular can also perform optimizations behind the scenes to make animations more performant.)</p>\n<p translation-origin=\"off\">For animations to be available for use, animation state changes are placed within\n<a href=\"api/animations/trigger\">animation triggers</a> which are housed inside of the <code>animations</code> annotation\nmetadata. Within a trigger both <a href=\"api/animations/state\">state</a> and <a href=\"api/animations/transition\">transition</a> entries\ncan be placed.</p>\n<code-example language=\"typescript\">\n@<a href=\"api/core/Component\" class=\"code-anchor\">Component</a>({\n  selector: 'animation-cmp',\n  templateUrl: 'animation-cmp.html',\n  animations: [\n    // this here is our <a href=\"api/animations/animation\" class=\"code-anchor\">animation</a> <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a> that\n    // will contain our <a href=\"api/animations/state\" class=\"code-anchor\">state</a> change animations.\n    <a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a>('myTriggerName', [\n      // the styles defined for the `on` and `off`\n      // states declared below are persisted on the\n      // element once the <a href=\"api/animations/animation\" class=\"code-anchor\">animation</a> completes.\n      <a href=\"api/animations/state\" class=\"code-anchor\">state</a>('on', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 1 }),\n      <a href=\"api/animations/state\" class=\"code-anchor\">state</a>('off', <a href=\"api/animations/style\" class=\"code-anchor\">style</a>({ opacity: 0 }),\n\n      // this here is our <a href=\"api/animations/animation\" class=\"code-anchor\">animation</a> that kicks off when\n      // this <a href=\"api/animations/state\" class=\"code-anchor\">state</a> change jump is true\n      <a href=\"api/animations/transition\" class=\"code-anchor\">transition</a>('on => off', [\n        <a href=\"api/animations/animate\" class=\"code-anchor\">animate</a>(\"1s\")\n      ])\n    ])\n  ]\n})\n</code-example>\n<p translation-origin=\"off\">As depicted in the code above, a group of related animation states are all contained within\nan animation <code><a href=\"api/animations/trigger\" class=\"code-anchor\">trigger</a></code> (the code example above called the trigger <code>myTriggerName</code>).\nWhen a trigger is created then it can be bound onto an element within the component's\ntemplate via a property prefixed by an <code>@</code> symbol followed by trigger name and an expression\nthat\nis used to determine the state value for that trigger.</p>\n<code-example language=\"html\">\n&#x3C;!-- animation-cmp.html -->\n&#x3C;div @myTriggerName=\"expression\">...&#x3C;/div>\n</code-example>\n<p translation-origin=\"off\">For state changes to be executed, the <code>expression</code> value must change value from its existing\nvalue\nto something that we have set an animation to animate on (in the example above we are listening\nto a change of state between <code>on</code> and <code>off</code>). The <code>expression</code> value attached to the trigger\nmust be something that can be evaluated with the template/component context.</p>\n<h3 translation-origin=\"off\" id=\"dsl-animation-functions\">DSL Animation Functions<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/Component#dsl-animation-functions\"><i class=\"material-icons\">link</i></a></h3>\n<p translation-origin=\"off\">Please visit each of the animation DSL functions listed below to gain a better understanding\nof how and why they are used for crafting animations in Angular:</p>\n<ul>\n<li>\n<a href=\"api/animations/trigger\">trigger()</a>\n</li>\n<li>\n<a href=\"api/animations/state\">state()</a>\n</li>\n<li>\n<a href=\"api/animations/transition\">transition()</a>\n</li>\n<li>\n<a href=\"api/animations/group\">group()</a>\n</li>\n<li>\n<a href=\"api/animations/sequence\">sequence()</a>\n</li>\n<li>\n<a href=\"api/animations/style\">style()</a>\n</li>\n<li>\n<a href=\"api/animations/animate\">animate()</a>\n</li>\n<li>\n<a href=\"api/animations/keyframes\">keyframes()</a>\n</li>\n</ul>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"encapsulation\"></a>encapsulation</td>\n        <td><label class=\"property-type-label\"><code><a href=\"api/core/ViewEncapsulation\" class=\"code-anchor\">ViewEncapsulation</a></code></label></td>\n        <td>\n          <p translation-origin=\"off\">Specifies how the template and the styles should be encapsulated:</p>\n<ul>\n<li>\n<a href=\"api/core/ViewEncapsulation#Native\">`ViewEncapsulation.Native`</a>\n<p translation-origin=\"off\"> to use shadow roots - only works\nif natively available on the platform,</p>\n</li>\n<li>\n<a href=\"api/core/ViewEncapsulation#Emulated\">`ViewEncapsulation.Emulated`</a>\n<p translation-origin=\"off\"> to use shimmed CSS that\nemulates the native behavior,</p>\n</li>\n<li>\n<a href=\"api/core/ViewEncapsulation#None\">`ViewEncapsulation.None`</a>\n<p translation-origin=\"off\"> to use global CSS without any\nencapsulation.</p>\n</li>\n</ul>\n\n          <p translation-origin=\"off\">When no <code>encapsulation</code> is defined for the component, the default value from the\n<a href=\"api/core/CompilerOptions\"><code>CompilerOptions</code></a> is used. The default is <code><a href=\"api/core/ViewEncapsulation#Emulated\" class=\"code-anchor\">ViewEncapsulation.Emulated</a></code>}. Provide a new\n<code><a href=\"api/core/CompilerOptions\" class=\"code-anchor\">CompilerOptions</a></code> to override this value.</p>\n<p translation-origin=\"off\">If the encapsulation is set to <code><a href=\"api/core/ViewEncapsulation#Emulated\" class=\"code-anchor\">ViewEncapsulation.Emulated</a></code> and the component has no <code>styles</code>\nnor <code>styleUrls</code> the encapsulation will automatically be switched to <code><a href=\"api/core/ViewEncapsulation#None\" class=\"code-anchor\">ViewEncapsulation.None</a></code>.</p>\n\n          \n        </td>\n    </tr>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"interpolation\"></a>interpolation</td>\n        <td><label class=\"property-type-label\"><code>[string, string]</code></label></td>\n        <td>\n          <p translation-origin=\"off\">Overrides the default encapsulation start and end delimiters (respectively <code>{{</code> and <code>}}</code>)</p>\n\n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"entryComponents\"></a>entryComponents</td>\n        <td><label class=\"property-type-label\"><code>Array&#x3C;<a href=\"api/core/Type\" class=\"code-anchor\">Type</a>&#x3C;any> | any[]></code></label></td>\n        <td>\n          <p translation-origin=\"off\">Defines the components that should be compiled as well when\nthis component is defined. For each components listed here,\nAngular will create a <a href=\"api/core/ComponentFactory\"><code>ComponentFactory</code></a> and store it in the\n<a href=\"api/core/ComponentFactoryResolver\"><code>ComponentFactoryResolver</code></a>.</p>\n\n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"metadata-member\">\n        <td><a id=\"preserveWhitespaces\"></a>preserveWhitespaces</td>\n        <td><label class=\"property-type-label\"><code>boolean</code></label></td>\n        <td>\n          <p translation-origin=\"off\">If <a href=\"api/core/Component#preserveWhitespaces\">Component.preserveWhitespaces</a> is set to <code>false</code>\npotentially superfluous whitespace characters (ones matching the <code>\\s</code> character class in\nJavaScript regular expressions) will be removed from a compiled template. This can greatly\nreduce AOT-generated code size as well as speed up view creation.</p>\n\n          <p translation-origin=\"off\">Current implementation works according to the following rules:</p>\n<ul>\n<li>all whitespaces at the beginning and the end of a template are removed (trimmed);</li>\n<li>text nodes consisting of whitespaces only are removed (ex.:\n<code>&#x3C;button>Action 1&#x3C;/button> &#x3C;button>Action 2&#x3C;/button></code> will be converted to\n<code>&#x3C;button>Action 1&#x3C;/button>&#x3C;button>Action 2&#x3C;/button></code> (no whitespaces between buttons);</li>\n<li>series of whitespaces in text nodes are replaced with one space (ex.:\n<code>&#x3C;span>\\n some text\\n&#x3C;/span></code> will be converted to <code>&#x3C;span> some text &#x3C;/span></code>);</li>\n<li>text nodes are left as-is inside HTML tags where whitespaces are significant (ex. <code>&#x3C;pre></code>,\n<code>&#x3C;<a href=\"api/forms/DefaultValueAccessor\" class=\"code-anchor\">textarea</a>></code>).</li>\n</ul>\n<p translation-origin=\"off\">Described transformations may (potentially) influence DOM nodes layout. However, the impact\nshould so be minimal. That's why starting from Angular 6, the\n<code>preserveWhitespaces</code> option is <code>false</code> by default (whitespace removal).\nIf you want to change the default setting for all components in your application you can use\nthe <code>preserveWhitespaces</code> option of the AOT compiler.</p>\n<p translation-origin=\"off\">Even with the default behavior of whitespace removal, there are ways of preserving whitespaces\nin certain fragments of a template. You can either exclude entire DOM sub-tree by using the\n<code>ngPreserveWhitespaces</code> attribute, ex.:</p>\n<code-example language=\"html\">\n&#x3C;div ngPreserveWhitespaces>\n    whitespaces are preserved here\n    &#x3C;span>    and here &#x3C;/span>\n&#x3C;/div>\n</code-example>\n<p translation-origin=\"off\">Alternatively you can force a space to be preserved in a text node by using the <code>&#x26;ngsp;</code>\npseudo-entity. <code>&#x26;ngsp;</code> will be replaced with a space character by Angular's template\ncompiler, ex.:</p>\n<code-example language=\"html\">\n&#x3C;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>>Spaces&#x3C;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>>&#x26;ngsp;&#x3C;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>>between&#x3C;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>>&#x26;ngsp;&#x3C;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>>links.&#x3C;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>>\n</code-example>\n<p translation-origin=\"off\">will be compiled to the equivalent of:</p>\n<code-example language=\"html\">\n&#x3C;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>>Spaces&#x3C;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>> &#x3C;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>>between&#x3C;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>> &#x3C;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>>links.&#x3C;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>>\n</code-example>\n<p translation-origin=\"off\">Please note that sequences of <code>&#x26;ngsp;</code> are still collapsed to just one space character when\nthe <code>preserveWhitespaces</code> option is set to <code>false</code>. Ex.:</p>\n<code-example language=\"html\">\n&#x3C;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>>before&#x3C;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>>&#x26;ngsp;&#x26;ngsp;&#x26;ngsp;&#x3C;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>>after&#x3C;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>>\n</code-example>\n<p translation-origin=\"off\">would be equivalent to:</p>\n<code-example language=\"html\">\n&#x3C;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>>before&#x3C;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>> &#x3C;<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>>after&#x3C;/<a href=\"api/router/RouterLinkWithHref\" class=\"code-anchor\">a</a>>\n</code-example>\n<p translation-origin=\"off\">The <code>&#x26;ngsp;</code> pseudo-entity is useful for forcing presence of\none space (a text node having <code>&#x26;ngsp;</code> pseudo-entities will never be removed), but it is not\nmeant to mark sequences of whitespace characters. The previously described\n<code>ngPreserveWhitespaces</code> attribute is more useful for preserving sequences of whitespace\ncharacters.</p>\n\n          \n        </td>\n    </tr>\n    \n    </tbody>\n  </table>\n</section>\n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/animations/animate\n - api/animations/animateChild\n - api/animations/group\n - api/animations/keyframes\n - api/animations/query\n - api/animations/sequence\n - api/animations/stagger\n - api/animations/state\n - api/animations/style\n - api/animations/transition\n - api/animations/trigger\n - api/common/APP_BASE_HREF\n - api/common/AsyncPipe\n - api/common/CurrencyPipe\n - api/common/DatePipe\n - api/common/DecimalPipe\n - api/common/DeprecatedCurrencyPipe\n - api/common/DeprecatedDatePipe\n - api/common/DeprecatedPercentPipe\n - api/common/HashLocationStrategy\n - api/common/I18nPluralPipe\n - api/common/I18nSelectPipe\n - api/common/JsonPipe\n - api/common/Location\n - api/common/LowerCasePipe\n - api/common/NgComponentOutlet\n - api/common/NgIf\n - api/common/NgTemplateOutlet\n - api/common/PathLocationStrategy\n - api/common/PercentPipe\n - api/common/SlicePipe\n - api/common/TitleCasePipe\n - api/core\n - api/core/AfterContentChecked\n - api/core/AfterContentInit\n - api/core/AfterViewChecked\n - api/core/AfterViewInit\n - api/core/ApplicationRef\n - api/core/ChangeDetectorRef\n - api/core/ComponentDecorator\n - api/core/ContentChild\n - api/core/ContentChildDecorator\n - api/core/ContentChildren\n - api/core/ContentChildrenDecorator\n - api/core/Directive\n - api/core/DoCheck\n - api/core/EventEmitter\n - api/core/Host\n - api/core/HostDecorator\n - api/core/IterableDiffers\n - api/core/KeyValueDiffers\n - api/core/NgZone\n - api/core/OnChanges\n - api/core/OnDestroy\n - api/core/OnInit\n - api/core/QueryList\n - api/core/ViewChild\n - api/core/ViewChildDecorator\n - api/core/ViewChildren\n - api/core/ViewChildrenDecorator\n - api/core/ViewContainerRef\n - api/core/ViewEncapsulation\n - api/core/testing/TestBed\n - api/forms/FormArrayName\n - api/forms/FormBuilder\n - api/forms/FormControlDirective\n - api/forms/FormControlName\n - api/forms/FormGroupDirective\n - api/forms/FormGroupName\n - api/forms/NgForm\n - api/forms/NgModel\n - api/forms/NgModelGroup\n - api/forms/RadioControlValueAccessor\n - api/forms/SelectControlValueAccessor\n - api/http/Http\n - api/http/XHRBackend\n - api/router/ActivatedRoute\n - api/router/ActivatedRouteSnapshot\n - api/router/NavigationExtras\n - api/router/RouterState\n - api/router/RouterStateSnapshot\n - api/router/UrlSegment\n - api/router/UrlTree\n - api/router/testing/SpyNgModuleFactoryLoader\n - api/upgrade/UpgradeAdapter\n - api/upgrade/static/downgradeComponent\n - guide/ajs-quick-reference\n - guide/animations\n - guide/aot-compiler\n - guide/architecture\n - guide/architecture-components\n - guide/architecture-modules\n - guide/architecture-services\n - guide/attribute-directives\n - guide/change-log\n - guide/cheatsheet\n - guide/component-interaction\n - guide/component-styles\n - guide/custom-elements\n - guide/dependency-injection\n - guide/dependency-injection-in-action\n - guide/displaying-data\n - guide/docs-style-guide\n - guide/dynamic-component-loader\n - guide/dynamic-form\n - guide/elements\n - guide/forms\n - guide/glossary\n - guide/hierarchical-dependency-injection\n - guide/i18n\n - guide/lifecycle-hooks\n - guide/ngmodule-faq\n - guide/npm-packages\n - guide/observables-in-angular\n - guide/pipes\n - guide/providers\n - guide/reactive-forms\n - guide/router\n - guide/rx-library\n - guide/set-document-title\n - guide/setup\n - guide/setup-systemjs-anatomy\n - guide/structural-directives\n - guide/styleguide\n - guide/template-syntax\n - guide/testing\n - guide/upgrade\n - guide/user-input\n - guide/webpack\n - tutorial/toh-pt0\n - tutorial/toh-pt1\n - tutorial/toh-pt2\n - tutorial/toh-pt3\n - tutorial/toh-pt4\n - tutorial/toh-pt5\n - tutorial/toh-pt6\n-->\n<!-- links from this doc:\n - api/animations/animate\n - api/animations/animation\n - api/animations/group\n - api/animations/keyframes\n - api/animations/sequence\n - api/animations/state\n - api/animations/style\n - api/animations/transition\n - api/animations/trigger\n - api/core/ChangeDetectionStrategy\n - api/core/CompilerOptions\n - api/core/Component#animations\n - api/core/Component#changeDetection\n - api/core/Component#component\n - api/core/Component#description\n - api/core/Component#dsl-animation-functions\n - api/core/Component#encapsulation\n - api/core/Component#entryComponents\n - api/core/Component#example\n - api/core/Component#interpolation\n - api/core/Component#moduleId\n - api/core/Component#options\n - api/core/Component#preserveWhitespaces\n - api/core/Component#simple-example\n - api/core/Component#simple-example-1\n - api/core/Component#styleUrls\n - api/core/Component#styles\n - api/core/Component#template\n - api/core/Component#templateUrl\n - api/core/Component#viewProviders\n - api/core/ComponentFactory\n - api/core/ComponentFactoryResolver\n - api/core/Directive\n - api/core/Directive#exportAs\n - api/core/Directive#host\n - api/core/Directive#inputs\n - api/core/Directive#outputs\n - api/core/Directive#providers\n - api/core/Directive#queries\n - api/core/Directive#selector\n - api/core/Provider\n - api/core/Type\n - api/core/ViewEncapsulation\n - api/core/ViewEncapsulation#Emulated\n - api/core/ViewEncapsulation#Native\n - api/core/ViewEncapsulation#None\n - api/forms/DefaultValueAccessor\n - api/router/RouterLinkWithHref\n - https://github.com/angular/angular/edit/master/packages/core/src/metadata/directives.ts?message=docs(core)%3A%20describe%20your%20change...#L756-L757\n - https://github.com/angular/angular/tree/6.0.0/packages/core/src/metadata/directives.ts#L756-L757\n-->"
}