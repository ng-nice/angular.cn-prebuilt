{
  "id": "api/core/EmbeddedViewRef",
  "title": "EmbeddedViewRef",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/angular/angular/edit/master/packages/core/src/linker/view_ref.ts?message=docs(core)%3A%20describe%20your%20change...#L26-L85\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/angular/angular/tree/6.0.0/packages/core/src/linker/view_ref.ts#L26-L85\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/core\", \"name\": \"@angular/core\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/core/EmbeddedViewRef\", \"name\": \"EmbeddedViewRef\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/core\">@angular/core</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"embeddedviewref\">EmbeddedViewRef<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/EmbeddedViewRef#embeddedviewref\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    <label class=\"api-status-label experimental\">experimental</label>\n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p translation-origin=\"off\">Represents an Angular View.</p>\n<p></p>\n  \n  \n  \n  <section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nabstract class <a href=\"api/core/EmbeddedViewRef\" class=\"code-anchor\">EmbeddedViewRef</a>&#x3C;C> extends <a class=\"code-anchor\" href=\"api/core/ViewRef\">ViewRef</a> {\n  <a class=\"code-anchor\" href=\"api/core/EmbeddedViewRef#context\">abstract get context: C</a>\n  <a class=\"code-anchor\" href=\"api/core/EmbeddedViewRef#rootNodes\">abstract get rootNodes: any[]</a>\n\n  // inherited from <a class=\"code-anchor\" href=\"api/core/ViewRef\">core/ViewRef</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewRef#destroyed\">abstract get destroyed: boolean</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewRef#destroy\">abstract destroy(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ViewRef#onDestroy\">abstract onDestroy(callback: Function): any</a>\n\n  // inherited from <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef\">core/ChangeDetectorRef</a>\n  <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#markForCheck\">abstract markForCheck(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#detach\">abstract detach(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#detectChanges\">abstract detectChanges(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#checkNoChanges\">abstract checkNoChanges(): void</a>\n  <a class=\"code-anchor\" href=\"api/core/ChangeDetectorRef#reattach\">abstract reattach(): void</a>\n}\n</code-example>\n\n  \n  \n\n</section>\n\n\n  \n\n  \n  \n  \n<section class=\"description\">\n  <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/EmbeddedViewRef#description\"><i class=\"material-icons\">link</i></a></h2>\n  <!-- TODO: move the next two paragraphs to the dev guide -->\n<p translation-origin=\"off\">A View is a fundamental building block of the application UI. It is the smallest grouping of\nElements which are created and destroyed together.</p>\n<p translation-origin=\"off\">Properties of elements in a View can change, but the structure (number and order) of elements in\na View cannot. Changing the structure of Elements can only be done by inserting, moving or\nremoving nested Views via a <a href=\"api/core/ViewContainerRef\"><code>ViewContainerRef</code></a>. Each View can contain many View Containers.</p>\n<!-- /TODO -->\n<h3 translation-origin=\"off\" id=\"example\">Example<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/EmbeddedViewRef#example\"><i class=\"material-icons\">link</i></a></h3>\n<p translation-origin=\"off\">Given this template...</p>\n<code-example>\nCount: {{items.length}}\n&#x3C;ul>\n  &#x3C;li *<a href=\"api/common/NgForOf\" class=\"code-anchor\">ngFor</a>=\"let  item of items\">{{item}}&#x3C;/li>\n&#x3C;/ul>\n</code-example>\n<p translation-origin=\"off\">We have two <a href=\"api/core/TemplateRef\"><code>TemplateRef</code></a>s:</p>\n<p translation-origin=\"off\">Outer <a href=\"api/core/TemplateRef\"><code>TemplateRef</code></a>:</p>\n<code-example>\nCount: {{items.length}}\n&#x3C;ul>\n  &#x3C;ng-template <a href=\"api/common/NgForOf\" class=\"code-anchor\">ngFor</a> let-item [<a href=\"api/common/NgForOf\" class=\"code-anchor\">ngForOf</a>]=\"items\">&#x3C;/ng-template>\n&#x3C;/ul>\n</code-example>\n<p translation-origin=\"off\">Inner <a href=\"api/core/TemplateRef\"><code>TemplateRef</code></a>:</p>\n<code-example>\n  &#x3C;li>{{item}}&#x3C;/li>\n</code-example>\n<p translation-origin=\"off\">Notice that the original template is broken down into two separate <a href=\"api/core/TemplateRef\"><code>TemplateRef</code></a>s.</p>\n<p translation-origin=\"off\">The outer/inner <a href=\"api/core/TemplateRef\"><code>TemplateRef</code></a>s are then assembled into views like so:</p>\n<code-example>\n&#x3C;!-- <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>: outer-0 -->\nCount: 2\n&#x3C;ul>\n  &#x3C;ng-template view-container-ref>&#x3C;/ng-template>\n  &#x3C;!-- <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>: inner-1 -->&#x3C;li>first&#x3C;/li>&#x3C;!-- /<a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>: inner-1 -->\n  &#x3C;!-- <a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>: inner-2 -->&#x3C;li>second&#x3C;/li>&#x3C;!-- /<a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>: inner-2 -->\n&#x3C;/ul>\n&#x3C;!-- /<a href=\"api/core/ViewRef\" class=\"code-anchor\">ViewRef</a>: outer-0 -->\n</code-example>\n\n</section>\n\n  \n\n  \n\n  \n\n  \n<section class=\"instance-properties\">\n  <h2 id=\"properties\">Properties<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/core/EmbeddedViewRef#properties\"><i class=\"material-icons\">link</i></a></h2>\n  <table class=\"is-full-width list-table properties-table\">\n    <thead>\n      <tr><th>Property</th><th>Type</th><th>Description</th></tr>\n    </thead>\n    <tbody>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"context\"></a>context</td>\n        <td><label class=\"property-type-label\"><code>C</code></label></td>\n        <td><span class=\"read-only-property\">Read-only.</span>\n          \n          \n          \n        </td>\n    </tr>\n    \n      <tr class=\"instance-property\">\n        <td><a id=\"rootNodes\"></a>rootNodes</td>\n        <td><label class=\"property-type-label\"><code>any[]</code></label></td>\n        <td><span class=\"read-only-property\">Read-only.</span>\n          \n          \n          \n        </td>\n    </tr>\n    \n    </tbody>\n  </table>\n</section>\n\n  \n\n\n  \n\n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/common/NgTemplateOutlet\n - api/core\n - api/core/ChangeDetectorRef\n - api/core/TemplateRef\n - api/core/ViewContainerRef\n - api/core/ViewRef\n - guide/structural-directives\n-->\n<!-- links from this doc:\n - /api\n - api/common/NgForOf\n - api/core\n - api/core/ChangeDetectorRef\n - api/core/ChangeDetectorRef#checkNoChanges\n - api/core/ChangeDetectorRef#detach\n - api/core/ChangeDetectorRef#detectChanges\n - api/core/ChangeDetectorRef#markForCheck\n - api/core/ChangeDetectorRef#reattach\n - api/core/EmbeddedViewRef#context\n - api/core/EmbeddedViewRef#description\n - api/core/EmbeddedViewRef#embeddedviewref\n - api/core/EmbeddedViewRef#example\n - api/core/EmbeddedViewRef#properties\n - api/core/EmbeddedViewRef#rootNodes\n - api/core/TemplateRef\n - api/core/ViewContainerRef\n - api/core/ViewRef\n - api/core/ViewRef#destroy\n - api/core/ViewRef#destroyed\n - api/core/ViewRef#onDestroy\n - https://github.com/angular/angular/edit/master/packages/core/src/linker/view_ref.ts?message=docs(core)%3A%20describe%20your%20change...#L26-L85\n - https://github.com/angular/angular/tree/6.0.0/packages/core/src/linker/view_ref.ts#L26-L85\n-->"
}