{
  "id": "api/upgrade/static/UpgradeComponent",
  "title": "UpgradeComponent",
  "contents": "\n\n<article>\n  <div class=\"page-actions\">\n    <a href=\"https://github.com/angular/angular/edit/master/packages/upgrade/src/static/upgrade_component.ts?message=docs(upgrade)%3A%20describe%20your%20change...#L28-L298\" aria-label=\"Suggest Edits\" title=\"Suggest Edits\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">mode_edit</i></a>\n    <a href=\"https://github.com/angular/angular/tree/6.0.0/packages/upgrade/src/static/upgrade_component.ts#L28-L298\" aria-label=\"View Source\" title=\"View Source\"><i class=\"material-icons\" aria-hidden=\"true\" role=\"img\">code</i></a>\n  </div>\n  <div class=\"breadcrumb\">\n    <script type=\"application/ld+json\">\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"BreadcrumbList\",\n        \"itemListElement\": [\n          { \"@type\": \"ListItem\", \"position\": 1, \"item\": { \"@id\": \"https://angular.io//api\", \"name\": \"API\" } },\n          { \"@type\": \"ListItem\", \"position\": 2, \"item\": { \"@id\": \"https://angular.io/api/upgrade/static\", \"name\": \"@angular/upgrade/static\" } },\n          { \"@type\": \"ListItem\", \"position\": 3, \"item\": { \"@id\": \"https://angular.io/api/upgrade/static/UpgradeComponent\", \"name\": \"UpgradeComponent\" } }\n        ]\n      }\n    </script>\n      <a href=\"/api\">API</a> / <a href=\"api/upgrade/static\">@angular/upgrade/static</a>\n  </div>\n  <header class=\"api-header\">\n    <h1 id=\"upgradecomponent\">UpgradeComponent<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeComponent#upgradecomponent\"><i class=\"material-icons\">link</i></a></h1>\n    <label class=\"api-type-label class\">class</label>\n    \n    <label class=\"api-status-label experimental\">experimental</label>\n    \n    \n  </header>\n  <aio-toc class=\"embedded\"></aio-toc>\n\n  <div class=\"api-body\">\n    \n  <p class=\"short-description\"></p><p translation-origin=\"off\">A helper class that allows an AngularJS component to be used from Angular.</p>\n<p></p>\n  \n  \n  \n  <section class=\"class-overview\">\n<code-example language=\"ts\" hidecopy=\"true\">\nclass <a href=\"api/upgrade/static/UpgradeComponent\" class=\"code-anchor\">UpgradeComponent</a> implements <a class=\"code-anchor\" href=\"api/core/OnInit\">OnInit</a>, <a class=\"code-anchor\" href=\"api/core/OnChanges\">OnChanges</a>, <a class=\"code-anchor\" href=\"api/core/DoCheck\">DoCheck</a>, <a class=\"code-anchor\" href=\"api/core/OnDestroy\">OnDestroy</a> {\n  <a class=\"code-anchor\" href=\"api/upgrade/static/UpgradeComponent#constructor()\">constructor(name: string, elementRef: ElementRef, injector: Injector)</a>\n  <a class=\"code-anchor\" href=\"api/upgrade/static/UpgradeComponent#ngOnInit\">ngOnInit()</a>\n  <a class=\"code-anchor\" href=\"api/upgrade/static/UpgradeComponent#ngOnChanges\">ngOnChanges(changes: SimpleChanges)</a>\n  <a class=\"code-anchor\" href=\"api/upgrade/static/UpgradeComponent#ngDoCheck\">ngDoCheck()</a>\n  <a class=\"code-anchor\" href=\"api/upgrade/static/UpgradeComponent#ngOnDestroy\">ngOnDestroy()</a>\n}\n</code-example>\n\n  \n  \n\n</section>\n\n\n  \n\n  \n  \n  \n<section class=\"description\">\n  <h2 id=\"description\">Description<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeComponent#description\"><i class=\"material-icons\">link</i></a></h2>\n  <p translation-origin=\"off\"><em>Part of the <a href=\"api?query=upgrade%2Fstatic\">upgrade/static</a>\nlibrary for hybrid upgrade apps that support AoT compilation</em></p>\n<p translation-origin=\"off\">This helper class should be used as a base class for creating Angular directives\nthat wrap AngularJS components that need to be \"upgraded\".</p>\n<h3 translation-origin=\"off\" id=\"examples\">Examples<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeComponent#examples\"><i class=\"material-icons\">link</i></a></h3>\n<p translation-origin=\"off\">Let's assume that you have an AngularJS component called <code>ng1Hero</code> that needs\nto be made available in Angular templates.</p>\n<code-example>\n// This AngularJS component will be \"upgraded\" to be used in Angular\nng1AppModule.component('ng1Hero', {\n  bindings: {hero: '&#x3C;', onRemove: '&#x26;'},\n  transclude: true,\n  template: `&#x3C;div class=\"title\" ng-transclude>&#x3C;/div>\n             &#x3C;h2>{{ $ctrl.hero.name }}&#x3C;/h2>\n             &#x3C;p>{{ $ctrl.hero.description }}&#x3C;/p>\n             &#x3C;button ng-click=\"$ctrl.onRemove()\">Remove&#x3C;/button>`\n});\n\n</code-example>\n<p translation-origin=\"off\">We must create a <code><a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a></code> that will make this AngularJS component\navailable inside Angular templates.</p>\n<code-example>\n// This Angular directive will act as an interface to the \"upgraded\" AngularJS component\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({selector: 'ng1-hero'})\nclass Ng1HeroComponentWrapper extends <a href=\"api/upgrade/static/UpgradeComponent\" class=\"code-anchor\">UpgradeComponent</a> implements <a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a>, <a href=\"api/core/OnChanges\" class=\"code-anchor\">OnChanges</a>, <a href=\"api/core/DoCheck\" class=\"code-anchor\">DoCheck</a>,\n    <a href=\"api/core/OnDestroy\" class=\"code-anchor\">OnDestroy</a> {\n  // The names of the input and output properties here must match the names of the\n  // `&#x3C;` and `&#x26;` bindings in the AngularJS component that is being wrapped\n  @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() hero: Hero;\n  @<a href=\"api/core/Output\" class=\"code-anchor\">Output</a>() onRemove: <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>&#x3C;void>;\n  constructor(@<a href=\"api/core/Inject\" class=\"code-anchor\">Inject</a>(<a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>) elementRef: <a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>, @<a href=\"api/core/Inject\" class=\"code-anchor\">Inject</a>(<a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>) injector: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>) {\n    // We must pass the name of the directive as used by AngularJS to the super\n    super('ng1Hero', elementRef, injector);\n  }\n\n  // For this class to work when compiled with AoT, we must implement these lifecycle hooks\n  // because the AoT compiler will not realise that the super class implements them\n  ngOnInit() { super.ngOnInit(); }\n\n  ngOnChanges(changes: <a href=\"api/core/SimpleChanges\" class=\"code-anchor\">SimpleChanges</a>) { super.ngOnChanges(changes); }\n\n  ngDoCheck() { super.ngDoCheck(); }\n\n  ngOnDestroy() { super.ngOnDestroy(); }\n}\n\n</code-example>\n<p translation-origin=\"off\">In this example you can see that we must derive from the <code><a href=\"api/upgrade/static/UpgradeComponent\" class=\"code-anchor\">UpgradeComponent</a></code>\nbase class but also provide an <a href=\"api/core/Directive\">`@Directive`</a> decorator. This is\nbecause the AoT compiler requires that this information is statically available at\ncompile time.</p>\n<p translation-origin=\"off\">Note that we must do the following:</p>\n<ul>\n<li>specify the directive's selector (<code>ng1-hero</code>)</li>\n<li>specify all inputs and outputs that the AngularJS component expects</li>\n<li>derive from <code><a href=\"api/upgrade/static/UpgradeComponent\" class=\"code-anchor\">UpgradeComponent</a></code></li>\n<li>\n<p translation-origin=\"off\">call the base class from the constructor, passing</p>\n<ul>\n<li>the AngularJS name of the component (<code>ng1Hero</code>)</li>\n<li>the <code><a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a></code> and <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code> for the component wrapper</li>\n</ul>\n</li>\n</ul>\n\n</section>\n\n  \n\n  \n\n  \n  <h2 id=\"constructor\">Constructor<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeComponent#constructor\"><i class=\"material-icons\">link</i></a></h2>\n  <a id=\"constructor()\"></a>\n<table class=\"is-full-width method-table constructor\">\n  \n  <tbody>\n    <tr>\n      <td class=\"short-description\">\n        <p translation-origin=\"off\">Create a new <code><a href=\"api/upgrade/static/UpgradeComponent\" class=\"code-anchor\">UpgradeComponent</a></code> instance. You should not normally need to do this.\nInstead you should derive a new class from this one and call the super constructor\nfrom the base class.</p>\n\n      </td>\n    </tr>\n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">constructor(name: string, elementRef: <a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>, injector: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>)</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table constructor-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>name</td>\n      \n      <td class=\"param-description\">\n            <p translation-origin=\"off\">Type: <code>string</code>.</p>\n      \n      </td>\n    </tr>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>elementRef</td>\n      \n      <td class=\"param-description\">\n            <p translation-origin=\"off\">Type: <code><a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a></code>.</p>\n      \n      </td>\n    </tr>\n    <tr class=\"constructor-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>injector</td>\n      \n      <td class=\"param-description\">\n            <p translation-origin=\"off\">Type: <code><a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a></code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n  <tr>\n      <td class=\"description\">\n        <code-example>\n// This Angular directive will act as an interface to the \"upgraded\" AngularJS component\n@<a href=\"api/core/Directive\" class=\"code-anchor\">Directive</a>({selector: 'ng1-hero'})\nclass Ng1HeroComponentWrapper extends <a href=\"api/upgrade/static/UpgradeComponent\" class=\"code-anchor\">UpgradeComponent</a> implements <a href=\"api/core/OnInit\" class=\"code-anchor\">OnInit</a>, <a href=\"api/core/OnChanges\" class=\"code-anchor\">OnChanges</a>, <a href=\"api/core/DoCheck\" class=\"code-anchor\">DoCheck</a>,\n    <a href=\"api/core/OnDestroy\" class=\"code-anchor\">OnDestroy</a> {\n  // The names of the input and output properties here must match the names of the\n  // `&#x3C;` and `&#x26;` bindings in the AngularJS component that is being wrapped\n  @<a href=\"api/core/Input\" class=\"code-anchor\">Input</a>() hero: Hero;\n  @<a href=\"api/core/Output\" class=\"code-anchor\">Output</a>() onRemove: <a href=\"api/core/EventEmitter\" class=\"code-anchor\">EventEmitter</a>&#x3C;void>;\n  constructor(@<a href=\"api/core/Inject\" class=\"code-anchor\">Inject</a>(<a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>) elementRef: <a href=\"api/core/ElementRef\" class=\"code-anchor\">ElementRef</a>, @<a href=\"api/core/Inject\" class=\"code-anchor\">Inject</a>(<a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>) injector: <a href=\"api/core/Injector\" class=\"code-anchor\">Injector</a>) {\n    // We must pass the name of the directive as used by AngularJS to the super\n    super('ng1Hero', elementRef, injector);\n  }\n\n  // For this class to work when compiled with AoT, we must implement these lifecycle hooks\n  // because the AoT compiler will not realise that the super class implements them\n  ngOnInit() { super.ngOnInit(); }\n\n  ngOnChanges(changes: <a href=\"api/core/SimpleChanges\" class=\"code-anchor\">SimpleChanges</a>) { super.ngOnChanges(changes); }\n\n  ngDoCheck() { super.ngDoCheck(); }\n\n  ngOnDestroy() { super.ngOnDestroy(); }\n}\n\n</code-example>\n<ul>\n<li>The <code>name</code> parameter should be the name of the AngularJS directive.</li>\n<li>The <code>elementRef</code> and <code>injector</code> parameters should be acquired from Angular by dependency\ninjection into the base class constructor.</li>\n</ul>\n<p translation-origin=\"off\">Note that we must manually implement lifecycle hooks that call through to the super class.\nThis is because, at the moment, the AoT compiler is not able to tell that the\n<code><a href=\"api/upgrade/static/UpgradeComponent\" class=\"code-anchor\">UpgradeComponent</a></code>\nalready implements them and so does not wire up calls to them at runtime.</p>\n\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n  \n\n\n  \n\n<section class=\"instance-methods\">\n  <h2 id=\"methods\">Methods<a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeComponent#methods\"><i class=\"material-icons\">link</i></a></h2>\n  \n    <a id=\"ngOnInit\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"ngoninit\">\n    ngOnInit()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeComponent#ngoninit\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    \n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">ngOnInit()</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-1\">Parameters</h4>\n<p>There are no parameters.</p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n  \n    <a id=\"ngOnChanges\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"ngonchanges\">\n    ngOnChanges()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeComponent#ngonchanges\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    \n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">ngOnChanges(changes: <a href=\"api/core/SimpleChanges\" class=\"code-anchor\">SimpleChanges</a>)</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-2\">Parameters</h4>\n<table class=\"is-full-width list-table parameters-table instance-method-overload-parameters\">\n  <tbody>\n  \n    <tr class=\"instance-method-overload-parameter\">\n      <td class=\"param-name\"><a id=\"\"></a>changes</td>\n      \n      <td class=\"param-description\">\n            <p translation-origin=\"off\">Type: <code><a href=\"api/core/SimpleChanges\" class=\"code-anchor\">SimpleChanges</a></code>.</p>\n      \n      </td>\n    </tr>\n  </tbody>\n</table>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n  \n    <a id=\"ngDoCheck\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"ngdocheck\">\n    ngDoCheck()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeComponent#ngdocheck\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    \n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">ngDoCheck()</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-3\">Parameters</h4>\n<p>There are no parameters.</p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n  \n    <a id=\"ngOnDestroy\"></a>\n<table class=\"is-full-width method-table instance-method\">\n  <thead><tr><th><h3 id=\"ngondestroy\">\n    ngOnDestroy()\n    \n  <a title=\"Link to this heading\" class=\"header-link\" aria-hidden=\"true\" href=\"api/upgrade/static/UpgradeComponent#ngondestroy\"><i class=\"material-icons\">link</i></a></h3></th></tr></thead>\n  <tbody>\n    \n  \n    <tr>\n      <td>\n        <code-example language=\"ts\" hidecopy=\"true\" class=\"no-box api-heading\">ngOnDestroy()</code-example>\n\n\n\n<h4 class=\"no-anchor\" id=\"parameters-4\">Parameters</h4>\n<p>There are no parameters.</p>\n\n\n\n\n\n\n\n      </td>\n    </tr>\n  \n  \n  </tbody>\n</table>\n\n  \n</section>\n\n\n  \n\n\n  \n\n\n  </div>\n</article>\n\n<!-- links to this doc:\n - api/core/DoCheck\n - api/core/OnChanges\n - api/core/OnDestroy\n - api/core/OnInit\n - api/upgrade/static\n - api/upgrade/static/UpgradeModule\n - guide/upgrade\n-->\n<!-- links from this doc:\n - /api\n - api/core/Directive\n - api/core/DoCheck\n - api/core/ElementRef\n - api/core/EventEmitter\n - api/core/Inject\n - api/core/Injector\n - api/core/Input\n - api/core/OnChanges\n - api/core/OnDestroy\n - api/core/OnInit\n - api/core/Output\n - api/core/SimpleChanges\n - api/upgrade/static\n - api/upgrade/static/UpgradeComponent#constructor\n - api/upgrade/static/UpgradeComponent#constructor()\n - api/upgrade/static/UpgradeComponent#description\n - api/upgrade/static/UpgradeComponent#examples\n - api/upgrade/static/UpgradeComponent#methods\n - api/upgrade/static/UpgradeComponent#ngDoCheck\n - api/upgrade/static/UpgradeComponent#ngOnChanges\n - api/upgrade/static/UpgradeComponent#ngOnDestroy\n - api/upgrade/static/UpgradeComponent#ngOnInit\n - api/upgrade/static/UpgradeComponent#ngdocheck\n - api/upgrade/static/UpgradeComponent#ngonchanges\n - api/upgrade/static/UpgradeComponent#ngondestroy\n - api/upgrade/static/UpgradeComponent#ngoninit\n - api/upgrade/static/UpgradeComponent#upgradecomponent\n - api?query=upgrade%2Fstatic\n - https://github.com/angular/angular/edit/master/packages/upgrade/src/static/upgrade_component.ts?message=docs(upgrade)%3A%20describe%20your%20change...#L28-L298\n - https://github.com/angular/angular/tree/6.0.0/packages/upgrade/src/static/upgrade_component.ts#L28-L298\n-->"
}